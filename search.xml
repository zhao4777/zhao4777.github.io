<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>mongodb_study_1</title>
      <link href="/2023/10/22/mongodb-study-1/"/>
      <url>/2023/10/22/mongodb-study-1/</url>
      
        <content type="html"><![CDATA[<h1 id="Mongo-DB入门"><a href="#Mongo-DB入门" class="headerlink" title="Mongo DB入门"></a>Mongo DB入门</h1><hr><h2 id="1-前情提要"><a href="#1-前情提要" class="headerlink" title="1.前情提要"></a>1.前情提要</h2><p>先ssh登入study301虚拟机</p><pre class=" language-c"><code class="language-c">ssh <span class="token number">10.108</span><span class="token punctuation">.</span><span class="token number">2.187</span> <span class="token operator">-</span>p <span class="token number">30003</span> <span class="token operator">-</span>l root密码：baihui</code></pre><h4 id="1-1-1MongoDB-Server启动（方法1）"><a href="#1-1-1MongoDB-Server启动（方法1）" class="headerlink" title="1.1.1MongoDB Server启动（方法1）"></a>1.1.1MongoDB Server启动（方法1）</h4><pre class=" language-c"><code class="language-c">#进入目录cd mongodb<span class="token operator">-</span>linux<span class="token operator">-</span>x86_64<span class="token operator">-</span>rhel70<span class="token number">-4.4</span><span class="token punctuation">.</span><span class="token number">9</span>#启动mongodb服务 bin<span class="token operator">/</span>mongod <span class="token operator">--</span>port<span class="token operator">=</span><span class="token number">27017</span> <span class="token operator">--</span>dbpath<span class="token operator">=</span><span class="token operator">/</span>mongodb<span class="token operator">/</span>data <span class="token operator">--</span>logpath<span class="token operator">=</span><span class="token operator">/</span>mongodb<span class="token operator">/</span>log<span class="token operator">/</span>mongodb<span class="token punctuation">.</span>log \<span class="token operator">--</span>bind_ip<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">.</span><span class="token number">0.0</span> <span class="token operator">--</span>fork#进入mongodb shellbin<span class="token operator">/</span>monogo</code></pre><p><img src="E:\mongodb学习笔记\第一二个星期\图片\登录.png"></p><h4 id="1-1-2MongoDB-Server启动（方法2）"><a href="#1-1-2MongoDB-Server启动（方法2）" class="headerlink" title="1.1.2MongoDB Server启动（方法2）"></a>1.1.2MongoDB Server启动（方法2）</h4><pre class=" language-c"><code class="language-c">#登陆指令mongod <span class="token operator">-</span>f <span class="token operator">/</span>mongodb<span class="token operator">/</span>conf<span class="token operator">/</span>mongo<span class="token punctuation">.</span>conf#进入mongo shellmongo#查看mongodb状态ps <span class="token operator">-</span>ef<span class="token operator">|</span>grep mongodb</code></pre><h4 id="1-2MongoDB关闭"><a href="#1-2MongoDB关闭" class="headerlink" title="1.2MongoDB关闭"></a>1.2MongoDB关闭</h4><p>进入mongo shell再关闭</p><pre class=" language-c"><code class="language-c">use admindb<span class="token punctuation">.</span><span class="token function">shutdownServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>exit</code></pre><h2 id="2-mongo-shell常用命令"><a href="#2-mongo-shell常用命令" class="headerlink" title="2.mongo shell常用命令"></a>2.mongo shell常用命令</h2><h4 id="2-1数据库及集合操作"><a href="#2-1数据库及集合操作" class="headerlink" title="2.1数据库及集合操作"></a>2.1数据库及集合操作</h4><pre class=" language-c"><code class="language-c">#查看所有库show dbs#切换至指定数据库，不存在则创建show test#删除当前数据库db<span class="token punctuation">.</span><span class="token function">dropDatabase</span><span class="token punctuation">(</span><span class="token punctuation">)</span>#查看集合show collections#删除集合db<span class="token punctuation">.</span>emp<span class="token punctuation">.</span><span class="token function">drop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre><p>特殊的：集合的创建</p><pre class=" language-c"><code class="language-c">#创建集合db<span class="token punctuation">.</span><span class="token function">crearteCollections</span><span class="token punctuation">(</span>name<span class="token punctuation">,</span> options<span class="token punctuation">)</span></code></pre><p>options参数为：<br><img src="E:/mongodb学习笔记/第一二个星期/图片/1.png" alt="图片"></p><h4 id="2-2安全认证"><a href="#2-2安全认证" class="headerlink" title="2.2安全认证"></a>2.2安全认证</h4><p>创建一个管理账户</p><pre class=" language-c"><code class="language-c">#先切换到admin库use admin#创建一个管理员账号db<span class="token punctuation">.</span><span class="token function">createUser</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>user<span class="token punctuation">:</span><span class="token string">"47"</span><span class="token punctuation">,</span>pwd<span class="token punctuation">:</span><span class="token string">"47"</span><span class="token punctuation">,</span>roles<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">"root"</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//若创建一个appdb的用户 则将root改为dbOwner 更多可以查看mongo --help</span>#验证用户db<span class="token punctuation">.</span><span class="token function">auth</span><span class="token punctuation">(</span><span class="token string">"47"</span><span class="token punctuation">,</span><span class="token string">"47"</span><span class="token punctuation">)</span></code></pre><p>需要以安全的方式登录mongodb</p><pre class=" language-c"><code class="language-c">#登陆指令mongod <span class="token operator">-</span>f <span class="token operator">/</span>mongodb<span class="token operator">/</span>conf<span class="token operator">/</span>mongo<span class="token punctuation">.</span>conf <span class="token operator">--</span>auth#安全方式进入mongodbmongo <span class="token operator">-</span>u47 <span class="token operator">-</span>p47 <span class="token operator">--</span>authenticationDatabase<span class="token operator">=</span>admin#登录在appdb中一个用户mongo <span class="token operator">-</span>uappdb <span class="token operator">-</span>p47 <span class="token operator">--</span>authenticationDatabase<span class="token operator">=</span>appdb</code></pre><h2 id="3-文档操作"><a href="#3-文档操作" class="headerlink" title="3.文档操作"></a>3.文档操作</h2><h4 id="3-1插入文档"><a href="#3-1插入文档" class="headerlink" title="3.1插入文档"></a>3.1插入文档</h4><p><strong>插入单个文档</strong></p><pre class=" language-c"><code class="language-c">#（一个节点）例：db<span class="token punctuation">.</span>emp<span class="token punctuation">.</span><span class="token function">insertOne</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>name<span class="token punctuation">:</span><span class="token string">"张三"</span><span class="token punctuation">,</span>age<span class="token punctuation">:</span><span class="token number">25</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    db<span class="token punctuation">.</span>emp<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>name<span class="token punctuation">:</span><span class="token string">"张三"</span><span class="token punctuation">,</span>age<span class="token punctuation">:</span><span class="token number">25</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>#验证</code></pre><p><strong>插入多个文档</strong></p><pre class=" language-c"><code class="language-c">例：db<span class="token punctuation">.</span>emp<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>name<span class="token punctuation">:</span><span class="token string">"李四"</span><span class="token punctuation">,</span>age<span class="token punctuation">:</span><span class="token number">24</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>name<span class="token punctuation">:</span><span class="token string">"王五"</span><span class="token punctuation">,</span>age<span class="token punctuation">:</span><span class="token number">25</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">]</span><span class="token punctuation">)</span></code></pre><h4 id="3-2-文档查询"><a href="#3-2-文档查询" class="headerlink" title="3.2 文档查询"></a>3.2 文档查询</h4><ul><li><p>案例引入</p><blockquote><p>已知脚本books.js(在appdb中)，若想查其中title为book-20的书该怎么查？</p></blockquote><pre class=" language-c"><code class="language-c">#登入mongo shell后，进入appdbdb<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//出现脚本内容</span>db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>title<span class="token punctuation">:</span><span class="token string">"book-20"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//出现book-20的属性内容</span></code></pre></li></ul><p> <strong>文档查询语法：</strong></p><pre class=" language-c"><code class="language-c">db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span>projection<span class="token punctuation">)</span>例：db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>type<span class="token punctuation">:</span><span class="token string">"novel"</span><span class="token punctuation">,</span>tag<span class="token punctuation">:</span><span class="token string">"developer"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//返回type为novel，tag为developer的书的所有属性</span>例：db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>type<span class="token punctuation">:</span><span class="token string">"novel"</span><span class="token punctuation">,</span>tag<span class="token punctuation">:</span><span class="token string">"developer"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>title<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>author<span class="token punctuation">:</span><span class="token number">1</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//&amp;#123;type:"novel",tag:"developer"&amp;#125;:查找type为novel和tag为developer的书；</span><span class="token comment" spellcheck="true">//&amp;#123;title:1,author:1&amp;#125;：返回所查找的书的title和author</span></code></pre><p><img src="E:/mongodb学习笔记/第一二个星期/图片/2.png" alt="图片"><br>还可以只返回第一项</p><pre class=" language-c"><code class="language-c">db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>type<span class="token punctuation">:</span><span class="token string">"novel"</span><span class="token punctuation">,</span>tag<span class="token punctuation">:</span><span class="token string">"developer"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>title<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">,</span>author<span class="token punctuation">:</span><span class="token number">1</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span></code></pre><ul><li><p>当要查询文档中某一项大于某数字的文档时</p><blockquote><p>当要查询books中收藏数(favCount)大于60的书时</p><pre class=" language-c"><code class="language-c">db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>type<span class="token punctuation">:</span><span class="token string">"travel"</span><span class="token punctuation">,</span>favCount<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>$gt<span class="token punctuation">:</span><span class="token number">60</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//$gt:表示大于</span></code></pre></blockquote></li></ul><blockquote><pre><code>**查找条件对照表**![图片](图片/3.png)**查询逻辑运算符**</code></pre></blockquote><ul><li>$lt: 存在并小于</li><li>$lte: 存在并小于等于</li><li>$gt: 存在并大于</li><li>$gte: 存在并大于等于</li><li>$ne: 不存在或存在但不等于</li><li>$in: 存在并在指定数组中</li><li>$nin: 不存在或不在指定数组中</li><li>$or: 匹配两个或多个条件中的一个</li><li>$and: 匹配全部条件</li></ul><p><strong>查找逻辑对照表</strong><br><img src="E:/mongodb学习笔记/第一二个星期/图片/4.png" alt="图片"></p><pre class=" language-c"><code class="language-c">例：db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>title<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>$in<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">"book-1"</span><span class="token punctuation">,</span><span class="token string">"book-2"</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//查找title为book-1和book-2的书</span>#输出结果<span class="token comment" spellcheck="true">//&amp;#123; "_id" : ObjectId("63346fa3dd53a05e7a9084b9"), "title" : "book-1", "type" : "sociality", "tag" : "nosql", "favCount" : 28, "author" : "xxx1" &amp;#125;</span><span class="token comment" spellcheck="true">//&amp;#123; "_id" : ObjectId("63346fa3dd53a05e7a9084ba"), "title" : "book-2", "type" : "novel", "tag" : "popular", "favCount" : 82, "author" : "xxx2" &amp;#125;</span></code></pre><p><strong>降序查询</strong></p><blockquote><p>想要查询tag为nosql和developer的书，并将其已favCount的降序的方式打印出来</p><pre class=" language-c"><code class="language-c">db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>tag<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>$in<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">"nosql"</span><span class="token punctuation">,</span><span class="token string">"developer"</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>favCount<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//-1为降序</span></code></pre><p><strong>分页查询</strong></p></blockquote><pre class=" language-c"><code class="language-c">db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//表实将所查到的数据跳过前八行（即从第九行开始输出），并且只输出4行</span></code></pre><p><strong>正则表达式匹配查询</strong></p><blockquote><p>若想查找type里面有”so”字符串的书</p><pre class=" language-c"><code class="language-c">db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>type<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>$regex<span class="token punctuation">:</span><span class="token string">"so"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//或者 </span>db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>type<span class="token punctuation">:</span><span class="token operator">/</span>so<span class="token operator">/</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span></code></pre></blockquote><h4 id="3-3更新文档（2022-10-10-2022-10-21）"><a href="#3-3更新文档（2022-10-10-2022-10-21）" class="headerlink" title="3.3更新文档（2022.10.10-2022.10.21）"></a>3.3更新文档（2022.10.10-2022.10.21）</h4><p>命令通用格式如下：</p><pre class=" language-c"><code class="language-c">db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span>update<span class="token punctuation">,</span>options<span class="token punctuation">)</span></code></pre><ul><li>query：描述更新的查询条件</li><li>update：描述更新的动作及内容</li><li>options：描述更新的选项</li><li><ul><li>upsert：若不存在update记录，是否插入新记录（默认为false，不插入）</li><li>multi：是否按条件查询出的多条记录全部更新（默认为false，只更新第一条）</li><li>writeConcern：决定一个写操作落到多少个节点上算成功</li></ul></li></ul><h5 id="1-更新操作符（update）"><a href="#1-更新操作符（update）" class="headerlink" title="1. 更新操作符（update）"></a>1. 更新操作符（update）</h5><p><img src="E:\mongodb学习笔记\第一二个星期\图片\更新操作符.png" alt="图片"></p><blockquote><p>例：要将id为63346fa3dd53a05e7a9084df的book的favCount加1</p><pre class=" language-c"><code class="language-c">db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>_id<span class="token punctuation">:</span><span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">"63346fa3dd53a05e7a9084df"</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>$inc<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>favCount<span class="token punctuation">:</span><span class="token number">1</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//query：&amp;#123;_id:ObjectId("63346fa3dd53a05e7a9084df")&amp;#125;</span><span class="token comment" spellcheck="true">//update：&amp;#123;$inc:&amp;#123;favCount:1&amp;#125;&amp;#125;</span><span class="token comment" spellcheck="true">//输出结果为：WriteResult(&amp;#123; "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 &amp;#125;)</span></code></pre></blockquote><ul><li>nMatched：是否匹配（匹配1，不匹配0）；</li><li>nUpserted：如果没有所查找的数据，是否有插入数据（插入1，没插入0）；</li><li>nModified：找到查找数据后，是否有更新修改数据（有修改1，没修改0）；</li></ul><p>若不加{multi:true}，那么只会更新第一条tag为npsql的数据，若加上，则将所查询出的数据全部更新</p><blockquote><p>例：要给tag为nosql的书新增一个publishDate的属性（new Date（）为mongodb默认数据结构）</p><pre class=" language-c"><code class="language-c">db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>tag<span class="token punctuation">:</span><span class="token string">"nosql"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>$set<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>publishDate<span class="token punctuation">:</span>new <span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//输出：WriteResult(&amp;#123; "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 &amp;#125;)</span>db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>tag<span class="token punctuation">:</span><span class="token string">"nosql"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>$set<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>publishDate<span class="token punctuation">:</span>new <span class="token function">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>multi<span class="token punctuation">:</span>true<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//输出：WriteResult(&amp;#123; "nMatched" : 9, "nUpserted" : 0, "nModified" : 9 &amp;#125;)</span></code></pre></blockquote><p>其他简便命令</p><p>对于db.collection.<strong>update</strong>(query,update,options)，update可替换为：</p><ul><li>updateOne：更新单个文档；</li><li>updateMany：更新多个文档</li><li>replaceOne：替换单个文档</li></ul><h5 id="2-upsert命令（options）"><a href="#2-upsert命令（options）" class="headerlink" title="2. upsert命令（options）"></a>2. upsert命令（options）</h5><pre class=" language-c"><code class="language-c">db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>title<span class="token punctuation">:</span><span class="token string">"my book"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>$set<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>tag<span class="token punctuation">:</span><span class="token string">"nothing"</span><span class="token punctuation">,</span>type<span class="token punctuation">:</span><span class="token string">"nothing"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>upsert<span class="token punctuation">:</span><span class="token number">1</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> <span class="token punctuation">)</span><span class="token comment" spellcheck="true">//先查询是否有title为my book的书，没有就建一个（因为upsert为1）；再往my book的数据中插入tag为nothing和type为nothing的属性</span>db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>title<span class="token punctuation">:</span><span class="token string">"my book"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//输出：&amp;#123; "_id" : ObjectId("634d04ad49c7cd9e18841348"), "title" : "my book", "tag" : "nothing", "type" : "nothing" &amp;#125;</span></code></pre><h5 id="3-实现replace"><a href="#3-实现replace" class="headerlink" title="3.实现replace"></a>3.实现replace</h5><p>若不含任何操作符，则实现replace语义，第二个文档将完全覆盖第一个（匹配值的文档）</p><pre class=" language-c"><code class="language-c">db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>title<span class="token punctuation">:</span><span class="token string">"my book"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>justTitle<span class="token punctuation">:</span><span class="token string">"my first book"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//输出：WriteResult(&amp;#123; "nMatched" : 1, "nUpserted" : 0, "nModified" : 1 &amp;#125;)</span>db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>justTitle<span class="token punctuation">:</span><span class="token string">"my first book"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//输出：&amp;#123; "_id" : ObjectId("634d04ad49c7cd9e18841348"), "justTitle" : "my first book" &amp;#125;</span></code></pre><h5 id="4-findAndModify命令"><a href="#4-findAndModify命令" class="headerlink" title="4.findAndModify命令"></a>4.findAndModify命令</h5><p>兼容查询修改功能，只能更新单个文档</p><blockquote><p>例：将id为ObjectId(“63346fa3dd53a05e7a9084cb”)的书的favCount加1，已知原favCount&#x3D;27</p><pre class=" language-c"><code class="language-c">db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">findAndModify</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>query<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token string">"_id"</span> <span class="token punctuation">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">"63346fa3dd53a05e7a9084cb"</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>update<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>$inc<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>favCount<span class="token punctuation">:</span><span class="token number">1</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">/*输出：&amp;#123;    "_id" : ObjectId("63346fa3dd53a05e7a9084cb"),    "title" : "book-19",    "type" : "technology",    "tag" : "developer",    "favCount" : 6,    "author" : "xxx19"&amp;#125;*/</span><span class="token comment" spellcheck="true">//输出为旧值27</span>db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">findAndModify</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>query<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span> <span class="token string">"_id"</span> <span class="token punctuation">:</span> <span class="token function">ObjectId</span><span class="token punctuation">(</span><span class="token string">"63346fa3dd53a05e7a9084cb"</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>update<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>$inc<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>favCount<span class="token punctuation">:</span><span class="token number">1</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>new<span class="token punctuation">:</span>true<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">/*输出：&amp;#123;    "_id" : ObjectId("63346fa3dd53a05e7a9084cb"),    "title" : "book-19",    "type" : "technology",    "tag" : "developer",    "favCount" : 8,    "author" : "xxx19"&amp;#125;*/</span><span class="token comment" spellcheck="true">//输出为新值28</span></code></pre></blockquote><h4 id="3-4删除文档"><a href="#3-4删除文档" class="headerlink" title="3.4删除文档"></a>3.4删除文档</h4><h5 id="1-remove命令"><a href="#1-remove命令" class="headerlink" title="1. remove命令"></a>1. remove命令</h5><p>remove需配合查询条件删除，若查询条件为空文档，则删除所有文档。</p><pre class=" language-c"><code class="language-c">db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">//删除所有文档</span><span class="token comment" spellcheck="true">//可以但不建议，不如直接删除user集合(db.user.drop())，效率更高</span>db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>age<span class="token punctuation">:</span><span class="token number">28</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//删除age为28的记录</span>db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>age<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>$lt<span class="token punctuation">:</span><span class="token number">25</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//删除age小于25的记录</span></code></pre><p>若想只删除一条数据记录，则命令通用格式为：</p><pre class=" language-c"><code class="language-c">db<span class="token punctuation">.</span>collection<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>query<span class="token punctuation">,</span>justOne<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//justOne为bool值</span></code></pre><blockquote><p>例：删除type为novel的首条记录</p><pre class=" language-c"><code class="language-c">db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>type<span class="token punctuation">:</span><span class="token string">"novel"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>true<span class="token punctuation">)</span></code></pre></blockquote><p>返回确认性信息为为：</p><p><img src="E:\mongodb学习笔记\第一二个星期\图片\remove.png" alt="图片"></p><h5 id="2-delete删除文档"><a href="#2-delete删除文档" class="headerlink" title="2. delete删除文档"></a>2. delete删除文档</h5><p>有deleteOne()和deleteMany()：</p><pre class=" language-c"><code class="language-c">db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">deleteMany</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//删除集合下所有文档（依然不建议）</span>db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">deleteMany</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>type<span class="token punctuation">:</span><span class="token string">"novel"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">//删除type为novel的所有文档</span>db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">deleteOne</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>type<span class="token punctuation">:</span><span class="token string">"novel"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token comment" spellcheck="true">//删除type为novel的第一个文档</span></code></pre><p>返回确认性信息为为：</p><p><img src="E:\mongodb学习笔记\第一二个星期\图片\delete.png" alt="图片"></p><h5 id="3-返回被删除的文档"><a href="#3-返回被删除的文档" class="headerlink" title="3. 返回被删除的文档"></a>3. 返回被删除的文档</h5><p>若想获得被删除的文档的信息，用findOneAndDelete命令：</p><pre class=" language-c"><code class="language-c">db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">findOneAndDelete</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>type<span class="token punctuation">:</span><span class="token string">"novel"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span></code></pre><p>返回为：</p><p><img src="E:\mongodb学习笔记\第一二个星期\图片\findOneAndDelete.png" alt="图片"></p><p>若想按照指定顺序删除找到的第一个文档：</p><pre class=" language-c"><code class="language-c">db<span class="token punctuation">.</span>books<span class="token punctuation">.</span><span class="token function">findOneAndDelete</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>type<span class="token punctuation">:</span><span class="token string">"novel"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>sort<span class="token punctuation">:</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>favCount<span class="token punctuation">:</span><span class="token number">1</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web_APIs</title>
      <link href="/2023/10/20/web-apis/"/>
      <url>/2023/10/20/web-apis/</url>
      
        <content type="html"><![CDATA[<h1 id="Web-APIs阶段"><a href="#Web-APIs阶段" class="headerlink" title="Web APIs阶段"></a>Web APIs阶段</h1><blockquote><p>JS基础学习ECMAScript基础语法为后面做铺垫，Web APIs是JS的应用，大量使用JS基础语法做交互效果</p><p>在这个阶段主要学习DOM和BOM，实现页面交互功能，Web APIs是JS所独有的部分，需要使用JS基础内容做基础</p><p>Web APIs是浏览器提供的一套操作浏览器功能的页面元素的API（BOM和DOM）</p></blockquote><p><strong>DOM</strong></p><ul><li>文档对象模型，处理可扩展标记语言（HTML和XML）的标准编程接口</li><li>通过DOM接口，可以改变网页内容、结构和样式</li><li>DOM树（DOM把以下内容看成是对象）<ul><li>文档（document）：一个页面就是一个文档</li><li>元素（element）：页面中的所有标签都是元素</li><li>节点（node）：网页中所有内容都是节点（标签、属性、文本、注释）</li></ul></li></ul><h2 id="DOM"><a href="#DOM" class="headerlink" title="DOM"></a>DOM</h2><h3 id="1-获取元素"><a href="#1-获取元素" class="headerlink" title="1. 获取元素"></a>1. 获取元素</h3><p><strong>根据id获取</strong>（了解）</p><ul><li><p>getElementById()</p><ul><li><p>返回的是一个元素对象</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>div id<span class="token operator">=</span><span class="token string">"'time"</span><span class="token operator">></span><span class="token number">2023</span><span class="token operator">-</span><span class="token number">5</span><span class="token operator">-</span><span class="token number">12</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token comment" spellcheck="true">//script标签放在body里面，页面是从上往下加载的</span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> timer <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'time'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//dir打印返回的的元素对象，更好的查看里面的属性和方法</span>        console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span>timer<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//div#time</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre></li></ul></li></ul><p><strong>根据标签名获取</strong>（了解）</p><ul><li><p>getElementsByTagName()</p><ul><li><p>返回带有指定标签的对象的集合</p></li><li><p>若想要依次打印里面的元素对象，可以采取遍历的形式</p></li><li><p>获取某父元素中的标签类元素：<code>document.getElementsByTagName(&#39;子元素[index]&#39;)</code></p></li><li><p>获取父元素中指定标签名的子元素：<code>element.getElementsByTagName(&#39;子元素&#39;)</code></p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>ul<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>这是一个句子<span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>这是一个句子<span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>这是一个句子<span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>这是一个句子<span class="token number">4</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>这是一个句子<span class="token number">5</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>    <span class="token operator">&lt;</span>ol id<span class="token operator">=</span><span class="token string">"ol"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>这是句子<span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>这是句子<span class="token number">2</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>这是句子<span class="token number">3</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>这是句子<span class="token number">4</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>        <span class="token operator">&lt;</span>li<span class="token operator">></span>这是句子<span class="token number">5</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>ol<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">//返回的是获取过来的元素对象的集合，以伪数组的形式存储</span>        <span class="token keyword">var</span> lis <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>lis<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        varol <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'ol'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ol<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> ol <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'ol'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ol<span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">'li'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre></li></ul></li></ul><p><strong>根据类名获取</strong>（了解）</p><ul><li>getElementsByClassName(‘类名’)<ul><li>html5新增方法</li></ul></li></ul><p><strong>指定选择器获取</strong>（重点）</p><ul><li><p>querySelector(‘选择器’)</p><ul><li><p>类、id、标签名等都可适用</p></li><li><p>切记，里面的选择器需要加符号（id加#，类加.）</p></li><li><p>返回指定选择器的存储cc.   cv  第一个对象</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"box"</span><span class="token operator">></span>盒子<span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"box"</span><span class="token operator">></span>盒子<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> boxs2 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>boxs2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//&lt;div class="box">盒子1&lt;/div></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre></li></ul></li><li><p>querySelectorAll(‘选择器’)</p><ul><li>根据指定选择器返回所有元素对象的集合（数组）</li><li>得到的是伪数组，没有push()、pop()方法</li></ul></li></ul><p><strong>获取body、html标签</strong></p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token comment" spellcheck="true">//获取body</span>    <span class="token keyword">var</span> bodyEle <span class="token operator">=</span> document<span class="token punctuation">.</span>body<span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bodyEle<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//获取html</span>    <span class="token keyword">var</span> htmlEle <span class="token operator">=</span> document<span class="token punctuation">.</span>documentElement<span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>htmlEle<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h3 id="2-操作元素"><a href="#2-操作元素" class="headerlink" title="2. 操作元素"></a>2. 操作元素</h3><blockquote><p>JS的DOM操作可以改变网页内容、结构和样式，我们可以利用DOM操作元素来改变元素里面的内容、属性等</p></blockquote><h4 id="2-1-改变元素内容（旧）"><a href="#2-1-改变元素内容（旧）" class="headerlink" title="2.1 改变元素内容（旧）"></a>2.1 改变元素内容（旧）</h4><ul><li><p>element.innerText</p></li><li><p>不识别html标签</p><ul><li>从起始位置到终止位置的内容，但它去除html标签，同时空格和换行也会去掉</li></ul></li><li><p>element.innerHTML</p><ul><li><p>识别html标签（使用最多）</p></li><li><p>起始位置到终止位置的全部内容，包括html标签，同时保留空格和换行</p></li></ul></li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>显示当前系统时间<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>某个时间<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">var</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            div<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//获得当前时间函数</span>        <span class="token keyword">function</span> <span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> year <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> month <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> dates <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'星期日'</span><span class="token punctuation">,</span> <span class="token string">'星期一'</span><span class="token punctuation">,</span> <span class="token string">'星期二'</span><span class="token punctuation">,</span> <span class="token string">'星期三'</span><span class="token punctuation">,</span> <span class="token string">'星期四'</span><span class="token punctuation">,</span> <span class="token string">'星期五'</span><span class="token punctuation">,</span> <span class="token string">'星期六'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">var</span> day <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token string">'今天是'</span> <span class="token operator">+</span> year <span class="token operator">+</span> <span class="token string">'年'</span> <span class="token operator">+</span> month <span class="token operator">+</span> <span class="token string">'月'</span> <span class="token operator">+</span> dates <span class="token operator">+</span> <span class="token string">'号 星期'</span> <span class="token operator">+</span> day<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><h4 id="2-1-更改元素内容（新）"><a href="#2-1-更改元素内容（新）" class="headerlink" title="2.1 更改元素内容（新）"></a>2.1 更改元素内容（新）</h4><ul><li><p>对象.innerText 属性</p><ul><li>显示纯文本，不解析标签</li></ul></li><li><p>对象.innerHTML 属性</p><ul><li>解析标签</li></ul></li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"box"</span><span class="token operator">></span>我是文字的内容<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">//修改文字内容innerText</span>        <span class="token keyword">const</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>box<span class="token punctuation">.</span>innerText<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//获取文字内容</span>        box<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">'修改过后'</span> <span class="token comment" spellcheck="true">//修改文字内容</span>        box<span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">'&lt;strong>修改过后&lt;/strong>'</span> <span class="token comment" spellcheck="true">//不解析标签</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'------------------'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//修改文字内容innerHTML</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>box<span class="token punctuation">.</span>innerHTML<span class="token punctuation">)</span> <span class="token comment" spellcheck="true">//获取文字内容</span>        box<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'修改过后'</span> <span class="token comment" spellcheck="true">//修改文字内容</span>        box<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'&lt;strong>修改过后&lt;/strong>'</span> <span class="token comment" spellcheck="true">//解析标签</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><h4 id="2-2-修改元素常见属性"><a href="#2-2-修改元素常见属性" class="headerlink" title="2.2 修改元素常见属性"></a>2.2 修改元素常见属性</h4><ul><li>可以通过JS设置&#x2F;修改标签元素属性，比如src更换图片</li><li>常见属性：herf、title、src等</li><li>语法：对象.属性 &#x3D; 值</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>img src<span class="token operator">=</span><span class="token string">"../pic/imag01.jpg"</span> alt<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">//随机数函数</span>        <span class="token keyword">function</span> <span class="token function">randomNum</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> m<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>m <span class="token operator">-</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> n<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 更改照片路径</span>        <span class="token keyword">const</span> img <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'img'</span><span class="token punctuation">)</span>        img<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token template-string"><span class="token string">`../pic/image0$&amp;#123;randomNum(1,4)&amp;#125;.jpg`</span></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><h4 id="2-3-修改样式属性"><a href="#2-3-修改样式属性" class="headerlink" title="2.3 修改样式属性"></a>2.3 修改样式属性</h4><p><strong>通过style修改样式</strong></p><ul><li>语法：对象.style.样式属性 &#x3D; ‘值’</li><li>记得跟单位！！！px！！</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"box"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 修改样式（style）</span>        <span class="token keyword">const</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span>        box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>width <span class="token operator">=</span> <span class="token string">'300px'</span>        box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>backgroundColor <span class="token operator">=</span> <span class="token string">'hotpink'</span>  <span class="token comment" spellcheck="true">//不能用- 只能用小驼峰命名法</span>        box<span class="token punctuation">.</span>style<span class="token punctuation">.</span>borderTop <span class="token operator">=</span> <span class="token string">'2px solid black'</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p><strong>通过类名修改样式</strong></p><ul><li>若修改的样式比较多，直接通过style修改比较繁琐，可以采用类名修改</li><li>可覆盖，新值换旧值</li><li>语法：元素.className &#x3D; ‘active’（active是一个css类名）</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>    <span class="token operator">&lt;</span>style<span class="token operator">></span>        <span class="token punctuation">.</span>box <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            height<span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            width<span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            background<span class="token punctuation">:</span> pink<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>p<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">//修改样式（类名）</span>        <span class="token keyword">const</span> p <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'p'</span><span class="token punctuation">)</span>        p<span class="token punctuation">.</span>className <span class="token operator">=</span> <span class="token string">'box'</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></code></pre><p><strong>通过classList修改样式（常用）</strong></p><ul><li><p>classList追加或删除类名</p></li><li><p>语法：</p><ul><li>追加一个类：元素.classList.add(‘类名’)</li><li>删除一个类：元素.classList.remove(‘类名’)</li><li>切换一个类：元素.classList.toggle(‘类名’)</li></ul></li><li><p>注意：类名不加. 并且还是字符串</p></li><li><p>切换指：有就删掉，没有就加上</p></li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>    <span class="token operator">&lt;</span>style<span class="token operator">></span>        <span class="token punctuation">.</span>box <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            height<span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            width<span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>            background<span class="token punctuation">:</span> pink<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>                <span class="token punctuation">.</span>active <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            color<span class="token punctuation">:</span> red<span class="token punctuation">;</span>            background<span class="token operator">-</span>color<span class="token punctuation">:</span> pink<span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"box"</span><span class="token operator">></span><span class="token number">333</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">//classList修改样式</span>        <span class="token keyword">const</span> box <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.box'</span><span class="token punctuation">)</span>        box<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">'active'</span><span class="token punctuation">)</span>        box<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token string">'box'</span><span class="token punctuation">)</span>        box<span class="token punctuation">.</span>classList<span class="token punctuation">.</span><span class="token function">toggle</span><span class="token punctuation">(</span><span class="token string">'box'</span><span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//有就删掉，没有就加上</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></code></pre><h4 id="2-4-操作表单元素-属性"><a href="#2-4-操作表单元素-属性" class="headerlink" title="2.4 操作表单元素 属性"></a>2.4 操作表单元素 属性</h4><ul><li>获取：DOM对象.属性名</li><li>设置：DOM对象.属性名 &#x3D; 新值</li><li>innerHTML得不到表单</li><li>表单属性中添加就有效果，移除就没效果，一律使用布尔值表示，如果true代表添加了该属性，false代表移除了该属性</li><li>例如：disabled、checked、selected</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span> value<span class="token operator">=</span><span class="token string">"电脑"</span><span class="token operator">></span> <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"checkbox"</span> name<span class="token operator">=</span><span class="token string">""</span> id<span class="token operator">=</span><span class="token string">""</span><span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>点击<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 获取元素</span>        <span class="token keyword">const</span> uname <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 设置值</span>        uname<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token string">'woyaomai'</span>        uname<span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token string">'password'</span>        <span class="token keyword">const</span> ipt <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ipt<span class="token punctuation">.</span>checked<span class="token punctuation">)</span><span class="token punctuation">;</span>        ipt<span class="token punctuation">.</span>checked <span class="token operator">=</span> <span class="token boolean">true</span> <span class="token comment" spellcheck="true">//勾选</span>        <span class="token comment" spellcheck="true">//获取button</span>        <span class="token keyword">const</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>btn<span class="token punctuation">.</span>disabled<span class="token punctuation">)</span>        btn<span class="token punctuation">.</span>disabled <span class="token operator">=</span> <span class="token boolean">true</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><h4 id="2-5-自定义属性"><a href="#2-5-自定义属性" class="headerlink" title="2.5 自定义属性"></a>2.5 自定义属性</h4><blockquote><p>以上为标准属性，比如class、id、title等，可以直接使用点语法操作，比如：disabled、checked、selected</p></blockquote><ul><li>自定义属性：<ul><li>html5推出专门的data-自定义属性</li><li>标签义data-开头</li><li>在DOM对象以dataset对象方式获取</li></ul></li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 自定义属性 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>div data<span class="token operator">-</span>id<span class="token operator">=</span><span class="token string">"1"</span> data<span class="token operator">-</span>spm<span class="token operator">=</span><span class="token string">"buzhidao"</span><span class="token operator">></span><span class="token number">1</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 自定义属性</span>        <span class="token keyword">const</span> div <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'div'</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>div<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>spm<span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">//buzhidao</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><h3 id="3-间歇函数（定时器）"><a href="#3-间歇函数（定时器）" class="headerlink" title="3.间歇函数（定时器）"></a>3.间歇函数（定时器）</h3><blockquote><p>目标：能够使用定时器函数重复执行代码，定时器函数可以开启和关闭定时器</p></blockquote><p><strong>开启定时器</strong></p><ul><li>作用：每个一段间隔时间，就调用一次这个函数</li><li>间隔时间是毫秒（1s &#x3D; 1000ms）</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//开启定时器</span><span class="token function">setInterval</span><span class="token punctuation">(</span>函数名<span class="token punctuation">,</span>间隔时间<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//关闭定时器</span><span class="token keyword">let</span> 变量名 <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>函数<span class="token punctuation">,</span>间隔时间<span class="token punctuation">)</span><span class="token function">clearInterval</span><span class="token punctuation">(</span>变量名<span class="token punctuation">)</span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 第一种方式(开启)</span>        <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'1s执行一次'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>        <span class="token comment" spellcheck="true">// 第二种方式(开启)</span>        <span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'( •̀ ω •́ )y'</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 关闭定时器</span>        <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>        <span class="token function">clearInterval</span><span class="token punctuation">(</span>num<span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><h3 id="4-事件监听"><a href="#4-事件监听" class="headerlink" title="4. 事件监听"></a>4. 事件监听</h3><blockquote><p>JS是我们有能力创建动态页面，而事件是可以被JS侦测到的行为，也就是触发相应的一种机制</p></blockquote><ul><li>语法：</li></ul><pre class=" language-javascript"><code class="language-javascript">元素对象<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'事件类型'</span><span class="token punctuation">,</span>要执行的函数<span class="token punctuation">)</span></code></pre><p><strong>事件三要素</strong></p><ul><li>事件源<ul><li>事件被触发的对象</li></ul></li><li>事件类型<ul><li>如何触发，什么时间；比如鼠标点击（onclick）还是鼠标经过（onmouseover）还是键盘按下</li></ul></li><li>事件处理程序<ul><li>通过一个函数赋值的方式完成</li></ul></li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 点击按钮就弹出对话框 <span class="token operator">--</span><span class="token operator">></span>    <span class="token operator">&lt;</span>button <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"btn"</span><span class="token operator">></span>按钮<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">const</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.btn'</span><span class="token punctuation">)</span>        btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'点击了'</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><p><strong>执行事件的步骤</strong></p><ul><li>添加事件源</li><li>注册事件（绑定事件）</li><li>添加事件处理程序（采取函数赋值形式）</li></ul><p><strong>常见鼠标事件</strong></p><table><thead><tr><th>鼠标事件</th><th>触发条件</th></tr></thead><tbody><tr><td>click</td><td>鼠标点击左键触发</td></tr><tr><td>mouseenter</td><td>鼠标经过触发</td></tr><tr><td>mouseleave</td><td>鼠标离开触发</td></tr><tr><td>focus</td><td>获得鼠标焦点触发</td></tr><tr><td>blur</td><td>失去鼠标焦点触发</td></tr><tr><td>Keydown</td><td>键盘按下触发</td></tr><tr><td>Keyup</td><td>键盘抬起触发</td></tr><tr><td>input</td><td>用户输入事件触发</td></tr></tbody></table><h4 id="4-1-事件对象"><a href="#4-1-事件对象" class="headerlink" title="4.1 事件对象"></a>4.1 事件对象</h4><ul><li>是什么<ul><li>也是个对象，这个对象里有事件触发时的相关信息</li><li>例如：鼠标点击事件中，事件对象就存了鼠标点在哪个位置等信息</li></ul></li><li>使用场景<ul><li>可以判断用户按下哪个键，比如按下回车键就可以发布新闻</li><li>可以判断鼠标点击了哪个元素，从而做出相应的操作</li></ul></li></ul><blockquote><p>也就是  <code>btn.addEventListener(&#39;click&#39;, function(e) &#123;&#125;) </code> 中的e就是事件对象</p></blockquote><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"text"</span><span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">const</span> input <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'input'</span><span class="token punctuation">)</span>    input<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'keyup'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token string">'Enter'</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'按下了Enter键'</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h5 id="4-1-4-trim字符串处理（补）"><a href="#4-1-4-trim字符串处理（补）" class="headerlink" title="4.1.4 trim字符串处理（补）"></a>4.1.4 trim字符串处理（补）</h5><ul><li>去除字符串左右两端空格，中间空格不去除</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token comment" spellcheck="true">// 去除字符串左右两端空格</span>    <span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">'   i am pink       '</span>    <span class="token comment" spellcheck="true">//打印：i am pink</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h4 id="4-2-环境对象this"><a href="#4-2-环境对象this" class="headerlink" title="4.2 环境对象this"></a>4.2 环境对象this</h4><ul><li>指内部特殊的特殊变量this，它代表着当前函数运行时所处的环境</li><li>普通函数里面，this指的是window</li><li>谁调用函数，谁就是this</li></ul><h4 id="4-3-回调函数"><a href="#4-3-回调函数" class="headerlink" title="4.3 回调函数"></a>4.3 回调函数</h4><ul><li>如果将函数A作为参数传递给函数B时，我们称函数A为<span style="color:red;">回调函数</span></li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//fn是回调函数</span><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'我是回调函数...'</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token function">setInterval</span><span class="token punctuation">(</span>fn<span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">)</span></code></pre><h4 id="4-4-事件解绑"><a href="#4-4-事件解绑" class="headerlink" title="4.4 事件解绑"></a>4.4 事件解绑</h4><ul><li>addEventListener方式，若想解绑，必须使用<code>removeEventListener(事件类型,事件处理函数[,获取捕获或冒泡阶段])</code></li></ul><p><em>[ ]代表不是必须参数，可不写</em></p><h3 id="5-事件流"><a href="#5-事件流" class="headerlink" title="5. 事件流"></a>5. 事件流</h3><blockquote><p>事件流 指 时间完整执行过程中的流动路径，分为捕获阶段和冒泡阶段</p></blockquote><ul><li><p>事件捕获：</p><ul><li>从DOM的根元素开始去执行对应的事件（从外到里）</li><li>事件捕获需要写对应代码才能看到效果</li></ul></li><li><p>事件冒泡：</p><ul><li>当一个元素出发事件后，会依次向上调用所有父级元素的同名事件（比如说都是点击click事件）</li><li>事件冒泡是默认存在的</li><li>L2事件监听第三个参数是false，或者默认都是冒泡</li></ul></li><li><p>阻止冒泡：</p><ul><li>需求：想把事件就限制在当前元素内，就需要阻止事件冒泡</li><li>前提：阻止事件冒泡需要拿到事件对象</li><li>语法：<code>事件对象.stopPropagation()</code></li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"fa"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"son"</span><span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">const</span> fa <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.fa'</span><span class="token punctuation">)</span>        <span class="token keyword">const</span> son <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'.son'</span><span class="token punctuation">)</span>        document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'我是爷爷'</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        fa<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'我是爸爸'</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        son<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'我是儿子'</span><span class="token punctuation">)</span>                <span class="token comment" spellcheck="true">// 阻止流动</span>            e<span class="token punctuation">.</span><span class="token function">stopPropagation</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre></li></ul><h3 id="6-事件委托"><a href="#6-事件委托" class="headerlink" title="6.事件委托"></a>6.事件委托</h3><ul><li>优点：减少注册次数，可以提高程序性能</li><li>原理：利用事件冒泡的特点<ul><li>给父元素注册事件，当我们触发子元素时，会冒泡到父元素身上，从而触发父元素的事件</li></ul></li><li>实现：<code>事件对象.target.tagName</code>可以获得真正触发事件的元素</li></ul><h3 id="7-阻止默认行为"><a href="#7-阻止默认行为" class="headerlink" title="7. 阻止默认行为"></a>7. 阻止默认行为</h3><blockquote><p>在某些情况下需要阻止默认行为的发生，比如 阻止链接的跳转，表单域跳转</p></blockquote><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>form action<span class="token operator">=</span><span class="token string">"http://www.itcast.cn"</span><span class="token operator">></span>        <span class="token operator">&lt;</span>input type<span class="token operator">=</span><span class="token string">"submit"</span> value<span class="token operator">=</span><span class="token string">"免费注册"</span><span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>form<span class="token operator">></span>    <span class="token operator">&lt;</span>a href<span class="token operator">=</span><span class="token string">"http://www.baidu.com"</span><span class="token operator">></span>链接<span class="token operator">&lt;</span><span class="token operator">/</span>a<span class="token operator">></span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token keyword">const</span> form <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'form'</span><span class="token punctuation">)</span>        form<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'submit'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 阻止默认行为 提交</span>            e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span></code></pre><h3 id="8-其他事件"><a href="#8-其他事件" class="headerlink" title="8.其他事件"></a>8.其他事件</h3><h4 id="8-1-页面加载事件"><a href="#8-1-页面加载事件" class="headerlink" title="8.1 页面加载事件"></a>8.1 页面加载事件</h4><p><strong>load事件</strong></p><blockquote><p>有些时候需要等页面资源全部处理完了做一些事情，老代码喜欢把script卸载head中，这时候直接找dom元素找不到</p></blockquote><ul><li><p>加载外部资源（如图片、外联CSS和JAvaScript等）加载完毕时出发的条件</p></li><li><p>事件名：load</p></li><li><p>监听页面所有资源加载完毕</p><ul><li>给<span style="color:red;">window</span>添加load事件</li><li>也可以对某个资源单独绑定load</li></ul></li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span><span class="token operator">!</span>DOCTYPE html<span class="token operator">></span><span class="token operator">&lt;</span>html lang<span class="token operator">=</span><span class="token string">"en"</span><span class="token operator">></span><span class="token operator">&lt;</span>head<span class="token operator">></span>    <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"UTF-8"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>meta name<span class="token operator">=</span><span class="token string">"viewport"</span> content<span class="token operator">=</span><span class="token string">"width=device-width, initial-scale=1.0"</span><span class="token operator">></span>    <span class="token operator">&lt;</span>title<span class="token operator">></span>Document<span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>    <span class="token comment" spellcheck="true">//script放在head内</span>    <span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 等待页面所有资源加载完毕，就回去执行回调函数</span>        window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'load'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token keyword">const</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">'button'</span><span class="token punctuation">)</span>            btn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'yes'</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>    <span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span><span class="token operator">&lt;</span>body<span class="token operator">></span>    <span class="token operator">&lt;</span>button<span class="token operator">></span>点击<span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span></code></pre><p><strong>DOMContentLoaded事件</strong></p><blockquote><p>当初始的HTML文档被完全加载和解析完成之后，DOMContentLoaded事件被触发，而无需等待样式表、图像等完全加载</p></blockquote><ul><li>事件名：DOMContentLoaded</li><li>监听页面DOM加载完毕：<ul><li>给<span style="color:red;">document</span>添加DOMContentLoaded事件</li></ul></li></ul><h4 id="8-2-元素滚动事件"><a href="#8-2-元素滚动事件" class="headerlink" title="8.2 元素滚动事件"></a>8.2 元素滚动事件</h4><blockquote><p>很多网页需要检测用户把页面滚动到某个区域后做一些处理，比如固定导航栏，返回顶部</p></blockquote><ul><li>滚动条在滚动的时候持续触发的事件</li></ul><p><strong>事件名：scroll</strong></p><ul><li>监听整个页面滚动</li><li>可以用scroll来检测滚动距离</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token comment" spellcheck="true">// 页面滚动事件</span>    window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'scroll'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'我滚了'</span><span class="token punctuation">)</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><h5 id="8-2-1-获取位置"><a href="#8-2-1-获取位置" class="headerlink" title="8.2.1 获取位置"></a>8.2.1 获取位置</h5><p><strong>scrollLeft和scrollTop</strong></p><ul><li>获取被卷去的大小</li><li>获取元素内容往左、往上滚出去看不到的距离</li><li>这两个值是可读写的</li></ul><p><em>scrollTo去到坐标</em>，eg：<code>window.scrollTo(0,0)</code></p><h4 id="8-3-页面尺寸事件"><a href="#8-3-页面尺寸事件" class="headerlink" title="8.3 页面尺寸事件"></a>8.3 页面尺寸事件</h4><h5 id="8-3-1-获取元素宽高"><a href="#8-3-1-获取元素宽高" class="headerlink" title="8.3.1 获取元素宽高"></a>8.3.1 获取元素宽高</h5><blockquote><p>获取元素的可见部分宽高（不包含边框，margin，滚动条等）</p></blockquote><ul><li>clientWidth</li><li>clientHeight</li></ul><h5 id="8-3-2-获取元素尺寸位置"><a href="#8-3-2-获取元素尺寸位置" class="headerlink" title="8.3.2 获取元素尺寸位置"></a>8.3.2 获取元素尺寸位置</h5><blockquote><p>获取元素的自身宽高、包含元素自身设置的宽高、padding、border</p><p>获取出来的是数值，只读属性</p></blockquote><ul><li>offsetLeft</li><li>offsetTop</li></ul><table><thead><tr><th>属性</th><th>作用</th><th>说明</th></tr></thead><tbody><tr><td>scrollLeft和scrollTop</td><td>被卷去的头部和左侧</td><td>配合页面滚动来用，可读写</td></tr><tr><td>clientWidth和clientHeight</td><td>获得元素宽度和高度</td><td>不包含border，margin，滚动条 用于js获取元素大小，只读属性</td></tr><tr><td>offsetWidth和offsetHeight</td><td>获得元素宽度和高度</td><td>包含border、padding，滚动条等，只读</td></tr><tr><td>offsetLeft和offsetTop</td><td>获取元素距离自己定位父元素的左、上边距</td><td>获取元素位置的时候使用，只读属性</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> JavaScript </tag>
            
            <tag> Web APIs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web_JavaScript</title>
      <link href="/2023/10/20/web-javascript/"/>
      <url>/2023/10/20/web-javascript/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h1 id="Javascript基础阶段"><a href="#Javascript基础阶段" class="headerlink" title="Javascript基础阶段"></a>Javascript基础阶段</h1><h2 id="1-介绍"><a href="#1-介绍" class="headerlink" title="1. 介绍"></a>1. 介绍</h2><blockquote><p>是一种运行在客户端的语言，是脚本语言</p></blockquote><p>描述类语言：</p><ul><li>HTML<ul><li>决定网页结构和内容（决定看到什么）</li></ul></li><li>CSS<ul><li>决定网页呈现给用户的模样（决定好不好看）</li></ul></li></ul><p>脚本语言（逐行解释）：</p><ul><li>JS<ul><li>实现业务逻辑和页面控制</li></ul></li></ul><p>JS组成：</p><ul><li>ECMAScript：规定了编程语法和基础核心知识</li><li>Web APIs<ul><li>DOM：文档对象模型（页面元素移动、大小、添加删除等）</li><li>BOM：浏览器对象模型（页面弹窗、检测窗口宽度、存储数据到浏览器等）</li></ul></li></ul><p>（mdn网站可做辅导）</p><h2 id="2-基础"><a href="#2-基础" class="headerlink" title="2. 基础"></a>2. 基础</h2><h3 id="2-1-书写位置"><a href="#2-1-书写位置" class="headerlink" title="2.1 书写位置"></a>2.1 书写位置</h3><blockquote><p>注意js代码用的是<strong>单引号</strong></p></blockquote><p><strong>行内</strong></p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 1.行内 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>唐伯虎<span class="token punctuation">"</span></span> <span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>alert(<span class="token punctuation">'</span>秋香姐<span class="token punctuation">'</span>)<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span></code></pre><p><strong>内嵌</strong></p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 2.内嵌 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script language-javascript">        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'沙漠骆驼'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><p><strong>外部</strong></p><p>script标签中间一定不要写代码！！</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 3.外部引入 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>my.js<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script language-javascript"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><h3 id="2-2-输入输出语句"><a href="#2-2-输入输出语句" class="headerlink" title="2.2 输入输出语句"></a>2.2 输入输出语句</h3><ul><li><p>输入框 <code>prompt</code></p><ul><li>prompt取过来的值是字符型的</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">'请输入你要输入的的内容：'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li><p>弹出警示框 <code>alert</code></p><ul><li>输出的，展示给用户的</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">'计算的结果是：'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li><p>控制台输出 <code>console.log</code></p><ul><li>给程序员测试用的</li></ul><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'我是程序员能看到的'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li></ul><h3 id="2-3-变量"><a href="#2-3-变量" class="headerlink" title="2.3 变量"></a>2.3 变量</h3><p><code>typeof 变量</code>  返回变量类型</p><p><strong>2.3.1 声明变量</strong></p><p>用<code>var</code>关键字来进行声明，声明变量的同时赋值变量，叫做变量的初始化。</p><p>*2023更新：现在利用<code>let</code>来声明变量</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">var</span> a<span class="token operator">=</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token string">'请输入你要输入的内容：'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        b<span class="token operator">=</span><span class="token number">18</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><ul><li>如果只声明不赋值，结果是undefined</li><li>不声明，直接赋值使用会变成全局变量（不推荐）</li></ul><p><strong>2.3.2 声明常量</strong></p><p>用<code>const</code>关键字声明，不允许更改，声明时必须赋值</p><h3 id="2-4-数据类型"><a href="#2-4-数据类型" class="headerlink" title="2.4 数据类型"></a>2.4 数据类型</h3><blockquote><p>js的变量数据类型是只有程序在运行过程中，根据等号右边的值来确定的。</p><p>js是动态语言，变量的数据类型是可以变化的</p></blockquote><p>共有Number、String、Boolean、Undefined、Null类型</p><p><strong>2.4.1 Number</strong></p><ul><li>有浮点型和整型<ul><li>如果表示八进制，在数字前面加<code>0</code></li><li>如果表示十六进制，在数字前面加<code>0x</code></li></ul></li><li><code>Number.MAX_VALUE</code>  查看数值最大值，同理<code>Number.MIN_VALUE</code>  查看数值最小值</li><li><code>Infinity</code>  表示无穷大</li><li><code>NaN</code>  表示一个非数字<ul><li><code>isNaN</code>  用来判断非数字，如果是数字返回<code>false</code></li></ul></li></ul><p><strong>2.4.2 String</strong></p><ul><li>推荐使用<strong>单引号</strong></li><li>引号嵌套<strong>（外单内双、外双内单）</strong></li><li>转义字符<code>\</code></li></ul><p>长度：字符串长度可以用 <code>length</code> 属性获取</p><p>拼接：多个字符串之间可以用 <code>+</code> 继续拼接，其拼接方式为 <strong>字符串 + 任何类型 &#x3D; 拼接之后的新字符串</strong></p><p>模板字符串：注意：外面包的是反引号，而不是单引号。</p><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>        <span class="token comment" spellcheck="true">// 模板字符串</span>        <span class="token keyword">let</span> age <span class="token operator">=</span> <span class="token number">19</span><span class="token punctuation">;</span>        document<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token template-string"><span class="token string">`我今年$&amp;#123;age&amp;#125;岁了`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre><p><strong>2.4.3 Undefined、Null</strong></p><ul><li>undefined与数字相加结果为NaN、null与数字相加结果为数字</li><li>与字符串相加，结果就是连起来</li></ul><p><strong>2.4.4 数据类型转换</strong></p><ul><li><p>转为字符串型</p><ul><li><p>变量.toString</p><ul><li>转换为字符串</li></ul></li><li><p>String(变量)</p><ul><li>强制转换为字符串</li></ul></li><li><p>加号拼接字符串（重要）</p><ul><li>和字符串拼接的结果都是字符串</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> num<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token function">alert</span><span class="token punctuation">(</span>num<span class="token operator">+</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li></ul></li><li><p>转为数字型</p><ul><li><p>parseInt(string)函数（重要）</p><ul><li>括号内必须以数字开头</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'78'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">parseInt</span><span class="token punctuation">(</span><span class="token string">'120pxabc'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//120 会去掉这个px单位</span></code></pre></li><li><p>parseFloat(string)函数（重要）</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token string">'79.21'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li><p>Number()强制转换函数</p><pre class=" language-javascript"><code class="language-javascript"><span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">'21'</span><span class="token punctuation">)</span></code></pre></li><li><p>隐式转换（-  * &#x2F;）</p><pre class=" language-java"><code class="language-java"><span class="token string">'12'</span><span class="token operator">-</span><span class="token number">0</span><span class="token punctuation">;</span></code></pre></li></ul></li><li><p>转为布尔类型</p><ul><li>Boolean()函数<ul><li>代表空的、否定的值会被转换为<code>false</code></li></ul></li></ul></li></ul><h3 id="2-5-运算符"><a href="#2-5-运算符" class="headerlink" title="2.5 运算符"></a>2.5 运算符</h3><ul><li><p>&#x3D;&#x3D;  默认转换数据类型，会把字符串型的数据转换为数字型，只要求<strong>值</strong>相等</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">18</span> <span class="token operator">==</span> <span class="token string">'18'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//true</span></code></pre></li><li><p>&#x3D;&#x3D;&#x3D; 或 !&#x3D;&#x3D; 全等，必须<strong>值</strong>与<strong>数据类型</strong>必须完全要一模一样</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">18</span> <span class="token operator">===</span> <span class="token string">'18'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//false</span></code></pre></li><li><p>三元运算符：条件 ? 满足条件执行的代码 : 不满足条件执行的代码</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token operator">></span><span class="token number">5</span> <span class="token operator">?</span> <span class="token number">3</span> <span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">)</span>num <span class="token operator">=</span> num <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">+</span> num <span class="token punctuation">:</span> num    <span class="token comment" spellcheck="true">//小于10的补位0</span></code></pre></li></ul><h3 id="2-6-数组"><a href="#2-6-数组" class="headerlink" title="2.6 数组"></a>2.6 数组</h3><p>创建数组的方式：</p><ul><li><p>利用new来创建</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li><p>利用字面量创建</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//创建一个空数组</span><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token string">'yes'</span><span class="token punctuation">]</span><span class="token punctuation">;</span></code></pre></li><li><p>数组名.length 可访问数组长度</p></li></ul><p>修改数组长度</p><ul><li><p>利用 数组名.length 修改数组长度</p><pre class=" language-javascript"><code class="language-javascript">arr<span class="token punctuation">.</span>length <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span></code></pre></li><li><p>新增数组元素</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">'y'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'no'</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//arr = [2,3,'y','no']</span>arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span>     <span class="token comment" spellcheck="true">//arr = [2,3,'y','no',6]</span></code></pre></li></ul><h3 id="2-7-函数"><a href="#2-7-函数" class="headerlink" title="2.7 函数"></a>2.7 函数</h3><p>函数的声明：function</p><ul><li>较为自由</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">/*方法一 具名函数*/</span><span class="token comment" spellcheck="true">/*可以先声明后使用，也可以先试用后生声明*/</span><span class="token keyword">function</span> <span class="token function">getMax</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> max <span class="token operator">=</span> arr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>int i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>arr<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> max<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            max <span class="token operator">=</span> arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> max<span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">var</span> re <span class="token operator">=</span> <span class="token function">getMax</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>re<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*方法二 匿名函数*/</span><span class="token comment" spellcheck="true">/*只能先声明后使用*/</span><span class="token keyword">var</span> fun <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*匿名函数：立即执行函数*/</span><span class="token comment" spellcheck="true">/*前后必须有分号*/</span><span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">fun</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">getResult</span><span class="token punctuation">(</span>num1<span class="token punctuation">,</span> numm2<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span>num1 <span class="token operator">+</span> num2<span class="token punctuation">,</span> num1 <span class="token operator">-</span> num2<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><p>伪数组：</p><ul><li>有length</li><li>有索引</li><li>没有真正数组的一些方法（pop()、push()等 ）</li></ul><p>当不确定有多少个参数传递的时候，可以用<code>arguments</code>来获取，<code>arguments</code>存储了所有传递过来的的实参，是个伪数组</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">fn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arguments<span class="token punctuation">)</span>  <span class="token comment" spellcheck="true">//arguments(3)=[1,2,3]</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token function">fn</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p>注意：</p><ul><li>在函数内部没有定义，而是直接赋值的变量也是全局变量。</li></ul><h3 id="2-8-预解析"><a href="#2-8-预解析" class="headerlink" title="2.8 预解析"></a>2.8 预解析</h3><blockquote><p>js引擎运行js分为两步：预解析 、 代码执行</p></blockquote><p>预解析：</p><ul><li><p>js引擎会把js里面所有的var和function提升到当前作用域的最前面</p></li><li><p>分为变量预解析（变量提升）和函数预解析（函数提升）</p></li><li><p>变量提升</p><ul><li>把所有变量的声明提升到当前的作用域最前面，不提升赋值操作</li></ul></li><li><p>函数提升</p><ul><li>把所有函数的声明提升到当前的作用域最前面，不调用函数</li></ul></li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> a <span class="token operator">=</span> b <span class="token operator">=</span> c <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//相当于var a=9;b=9;c=9; b和c直接赋值，没有var声明，当全局变量看</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//99999报错</span></code></pre><h3 id="2-9-对象"><a href="#2-9-对象" class="headerlink" title="2.9 对象"></a>2.9 对象</h3><p>创建对象的方法</p><ul><li><p>字面量创建（属性）</p><ul><li>花括号 {} 包含对象的属性与方法</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    uname<span class="token punctuation">:</span><span class="token string">'anna'</span><span class="token punctuation">,</span>    <span class="token string">'goods-name'</span><span class="token punctuation">:</span><span class="token string">'小米'</span>    age<span class="token punctuation">:</span><span class="token number">19</span><span class="token punctuation">,</span>    sayHI<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'hi'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//调用对象属性</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>uname<span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span><span class="token string">'age'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">[</span><span class="token string">'goods-name'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//调用对象方法</span>obj<span class="token punctuation">.</span><span class="token function">sayHI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li><p>new Object创建</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> obj2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Object</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>obj2<span class="token punctuation">.</span>uname <span class="token operator">=</span> <span class="token string">'coco'</span><span class="token punctuation">;</span>obj2<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>obj2<span class="token punctuation">.</span>say <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'h'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre></li><li><p>对象中的方法</p><ul><li>在对象外调用：对象名.方法名()</li><li>经典例子：document.write()</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script<span class="token operator">></span>    <span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            uname<span class="token punctuation">:</span> <span class="token string">'刘德华'</span><span class="token punctuation">,</span>            <span class="token comment" spellcheck="true">// 方法</span>            song<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'冰雨'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//用逗号隔开</span>            dance<span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>                console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'这是dance'</span><span class="token punctuation">)</span>            <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">// 方法调用：对象名.方法名</span>    obj<span class="token punctuation">.</span><span class="token function">song</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span></code></pre></li><li><p>构造函数创建</p><ul><li>可利用函数的方法，重复代码，构造对象，将对象里面一些相同的属性和方法抽象出来封装到函数里面</li></ul><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Star</span><span class="token punctuation">(</span>uname<span class="token punctuation">,</span> age<span class="token punctuation">,</span> sex<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//构造函数的函数名要大写</span>    <span class="token comment" spellcheck="true">//属性</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> uname<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>sex <span class="token operator">=</span> sex<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//方法</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>sing <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>sang<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sang<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">var</span> ldh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Star</span><span class="token punctuation">(</span><span class="token string">'刘德华'</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>ldh<span class="token punctuation">.</span><span class="token function">sing</span><span class="token punctuation">(</span><span class="token string">'一首歌'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">var</span> ldh <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Star</span><span class="token punctuation">(</span><span class="token string">'张学友'</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token string">'男'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><ul><li>new执行时会做的四件事：<ul><li>在内存中创建一个新的空对象</li><li>让this指向这个新的对象</li><li>执行构造函数里面的代码，给这个新对象添加属性和方法</li><li>返回这个新对象</li></ul></li></ul></li></ul><h4 id="2-9-1-遍历对象"><a href="#2-9-1-遍历对象" class="headerlink" title="2.9.1 遍历对象"></a>2.9.1 遍历对象</h4><blockquote><p>使用for…in语句遍历对象</p></blockquote><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> k <span class="token keyword">in</span> ldh<span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//输出属性名</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ldh<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//输出属性值</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h4 id="2-9-2-内置对象"><a href="#2-9-2-内置对象" class="headerlink" title="2.9.2 内置对象"></a>2.9.2 内置对象</h4><blockquote><p>js提供了多个内置对象：Math、Date、Array、String等，利用MDN文档进行查询</p></blockquote><h5 id="（1）-Math"><a href="#（1）-Math" class="headerlink" title="（1） Math"></a>（1） Math</h5><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">abs</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment" spellcheck="true">//1，绝对值函数 </span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span>PI<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//3.141592689793</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//-4，向下取整</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">ceil</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">3.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//-3，向上取整</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//-1，四舍五入，就近取整（.5往大取）</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">//2,取最大值</span></code></pre><p><strong>随机数方法random()</strong></p><ul><li><p>返回一个随机的小数，取值范围为：0 &lt;&#x3D; x &lt; 1</p></li><li><p>函数里无参数</p></li><li><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//得到两个数区间的随机整数，包括两个数在内</span><span class="token keyword">function</span> <span class="token function">getRandomIntInclusive</span><span class="token punctuation">(</span>min<span class="token punctuation">,</span>max<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//min=Math.ceil(min);</span>    <span class="token comment" spellcheck="true">//max=Math.floor(max);</span>    <span class="token comment" spellcheck="true">//比如：想取0-10之间的数：Math.floor(Math.random()*(10+1))</span>    <span class="token keyword">return</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">random</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>max<span class="token operator">-</span>min<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">+</span>min<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//随机点名</span><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'张三'</span><span class="token punctuation">,</span> <span class="token string">'李四'</span><span class="token punctuation">,</span> <span class="token string">'王五'</span><span class="token punctuation">,</span> <span class="token string">'小刘'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span><span class="token function">getRandomIntInclusive</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> arr<span class="token punctuation">.</span>length<span class="token number">-1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li></ul><h5 id="（2）Date"><a href="#（2）Date" class="headerlink" title="（2）Date"></a>（2）Date</h5><ul><li><p>Date()日期对象是一个构造函数，必须用new来调用创建日期对象</p></li><li><p>没有参数时，返回当前系统的的时间</p></li><li><p>参数常见写法</p><ul><li>数字型：2019,10,01     </li><li>字符型：’2019-10-1 8:8:8’</li></ul></li><li><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> date1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">2019</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">01</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date1<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">//Fri Nov 01 2019 00:00:00 GMT+0800 (中国标准时间)  注意：输出的为Nov，不是10月</span><span class="token keyword">var</span> date2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token string">'2019-10-01 8:8:8'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//Tue Oct 01 2019 08:08:08 GMT+0800 (中国标准时间)</span><span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//2023</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//4，（0-11）</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//10</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//3（周日为0，周六为6，0-6）</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//19</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//56</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//43</span></code></pre></li><li><p>对于时间小于两位数时，补0问题</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> h <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//小于两位数补0</span>    h <span class="token operator">=</span> h <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> h <span class="token punctuation">:</span> h<span class="token punctuation">;</span>    <span class="token keyword">var</span> m <span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    m <span class="token operator">=</span> m <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> m <span class="token punctuation">:</span> m<span class="token punctuation">;</span>    <span class="token keyword">var</span> s s<span class="token operator">=</span> time<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    s <span class="token operator">=</span> s <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">'0'</span> <span class="token operator">+</span> s <span class="token punctuation">:</span> s<span class="token punctuation">;</span>    <span class="token keyword">return</span> h <span class="token operator">+</span> <span class="token string">':'</span> <span class="token operator">+</span> m <span class="token operator">+</span> <span class="token string">':'</span> <span class="token operator">+</span> s<span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li></ul><h5 id="（3）-Array"><a href="#（3）-Array" class="headerlink" title="（3） Array"></a>（3） Array</h5><p><strong>检测是否为数组</strong></p><ul><li><p>instanceof</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr <span class="token keyword">instanceof</span> <span class="token class-name">Array</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">//True</span></code></pre></li><li><p>Array.isArray()</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Array<span class="token punctuation">.</span><span class="token function">isArray</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li></ul><p><strong>添加元素</strong></p><ul><li><p>push()</p><ul><li><p>push完毕后返回的结果是新数组的长度，原数组也会发生变化</p></li><li><p>在数组末尾添加一个或多个数组元素</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">'yes'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//5</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//[1,2,3,5,'yes']</span></code></pre></li></ul></li><li><p>unshift()</p><ul><li><p>unshift完毕后返回的是新数组的长度，原数组也会发生变化</p></li><li><p>是在数组的开头添加一个或多个元素</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//7</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">;</span>           <span class="token comment" spellcheck="true">//[0,'red',1,2,3,5,'yes']</span></code></pre></li></ul></li></ul><p><strong>删除元素</strong></p><ul><li><p>pop()</p><ul><li><p>unshift完毕后返回的是删除的那个元素，原数组也会发生变化</p></li><li><p>只能删除数组的最后一个元素</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//pink</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//[0,'red',1,2,3,5]</span></code></pre></li></ul></li><li><p>shift()</p><ul><li><p>shift完毕后返回的是删除的那个元素，原数组也会发生变化</p></li><li><p>只能删除数组的第一个元素</p><pre class=" language-javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//0</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token comment" spellcheck="true">//['red',1,2,3,5]</span></code></pre></li></ul></li></ul><p><strong>数组排序</strong></p><ul><li><p>reverse()</p><ul><li>翻转数组</li></ul></li><li><p>sort()</p><ul><li><p>缺点：双位数排序有误</p><pre class=" language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">//改进：</span><span class="token keyword">var</span> arr1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">;</span>arr1<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> a<span class="token operator">-</span>b<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//升序排列</span>   <span class="token comment" spellcheck="true">//return b-a;//降序排列</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//[1,4,7,13,77]</span></code></pre></li></ul></li></ul><p><strong>数组索引</strong></p><ul><li><p>indexOf()</p><ul><li><p>返回该元素在数组内的索引号，值返回第一个满足条件的索引号</p></li><li><p>找不到元素返回-1</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'red'</span><span class="token punctuation">,</span><span class="token string">'blue'</span><span class="token punctuation">,</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'yellow'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'blue'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//2</span></code></pre></li><li><p>字符串类型也可用<code>str.indexOf(&#39;要查找的字符&#39;,[起始位置]);</code></p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">'你好我是爱学习的学生'</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'学'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//5</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span><span class="token string">'学'</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//8</span></code></pre></li></ul></li><li><p>lastindexOf()</p><ul><li>从后往前查找，返回的索引号还是正向的索引号</li><li>找不到元素返回-1</li></ul></li></ul><p><strong>数组转换为字符串</strong></p><ul><li><p>toString()</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li><li><p>join(分隔符)</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'green'</span><span class="token punctuation">,</span><span class="token string">'blue'</span><span class="token punctuation">,</span><span class="token string">'red'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'-'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre></li></ul><h5 id="（4）-String"><a href="#（4）-String" class="headerlink" title="（4） String"></a>（4） String</h5><p><strong>根据位置返回字符</strong></p><ul><li>charAt(index)<ul><li>返回指定位置的字符本身</li></ul></li><li>charCodeAt(index)<ul><li>返回指定位置的字符的ASCII码</li></ul></li><li>str[index]<ul><li>返回指定位置的字符本身</li></ul></li></ul><p><strong>字符串操作方法</strong></p><ul><li><p>concat(str1,str2,…)</p><ul><li>拼接字符串，用于连接两个或多个字符串</li></ul></li><li><p>substr(start,length)</p><ul><li>从start开始索引，取length个数的字符</li></ul></li><li><p>slice(start,end)</p><ul><li>从start开始，截取到end位置，end取不到</li></ul></li><li><p>substring(start,end)</p></li><li><p>从start开始，截取到end，end取不到，不接受负值</p></li><li><p>replace(‘被替换的字符’,’替换为的字符’)</p><ul><li><p>只替换第一个字符</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> str1 <span class="token operator">=</span> <span class="token string">'aaabbbccc'</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str1<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//baabbbccc</span></code></pre></li></ul></li><li><p>split(‘分隔符’)</p><ul><li><p>将字符转换为数组（join将数组转化为字符）</p><pre class=" language-javascript"><code class="language-javascript"><span class="token keyword">var</span> str2 <span class="token operator">=</span> <span class="token string">'red,pink,yellow'</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str2<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//['red', 'pink', 'yellow']</span></code></pre></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web_CSS(position)</title>
      <link href="/2023/10/20/web-css.position/"/>
      <url>/2023/10/20/web-css.position/</url>
      
        <content type="html"><![CDATA[<h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><h2 id="1-定位（position）"><a href="#1-定位（position）" class="headerlink" title="1. 定位（position）"></a>1. 定位（position）</h2><blockquote><p>定位（position）是一个更加高级的布局手段，通过定位，可以将元素摆放到页面的任意位置，使用<code>position</code>属性来设置定位</p></blockquote><p><code>position</code></p><ul><li>可选值：<ul><li><code>static</code>  默认值，元素是静止的没有开启定位</li><li><code>relative</code>  开启元素的相对定位</li><li><code>absolute</code>  开启元素的绝对定位</li><li><code>fixed</code>  开启元素的固定定位</li><li><code>sticky</code>  开启元素的粘滞定位</li></ul></li></ul><h3 id="1-1-相对定位（relative）"><a href="#1-1-相对定位（relative）" class="headerlink" title="1.1 相对定位（relative）"></a>1.1 相对定位（relative）</h3><blockquote><p>当元素的position属性值设置为relative时，则开启了元素的相对定位</p></blockquote><p>相对定位的特点：</p><ul><li>元素开启相对定位以后，如果不设置偏移量元素不会发生任何变化</li><li>相对定位是参照于元素在文档流中的位置进行定位的</li><li>相对定位会提升元素的层级</li><li>相对定位不会使元素脱离文档流</li><li>相对定位不会改变元素性质，块还是块，行内还是行内</li></ul><p>偏移量（<code>offset</code>）：</p><ul><li><p>当元素开启了定位以后，可以通过偏移量设置元素位置</p></li><li><p>top</p><ul><li>定位元素和定位位置上边的距离（越大越向下移动）</li></ul></li><li><p>bottom</p><ul><li>定位元素和定位位置下边的距离（越大越向上移动）</li></ul></li><li><p>left</p><ul><li>定位元素和定位位置左边的距离（越大越向右移动）</li></ul></li><li><p>right</p><ul><li>定位元素和定位位置右边的距离（越大越向左移动）</li></ul></li></ul><p><em>定位元素垂直方向的位置由<code>top</code>和<code>bottom</code>两个属性来控制，通常情况下我们只会使用其一（水平方向同理）</em></p><pre class=" language-css"><code class="language-css"><span class="token number">.</span>box<span class="token number">2</span>&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>    <span class="token property">position</span><span class="token punctuation">:</span>relative<span class="token punctuation">;</span>   <span class="token comment" spellcheck="true">/*开启定位*/</span>    <span class="token property">top</span><span class="token punctuation">:</span>-<span class="token number">200</span>px<span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">/*先向上移动*/</span>    <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">/*再向右移动*/</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h3 id="1-2-绝对定位（absolute）"><a href="#1-2-绝对定位（absolute）" class="headerlink" title="1.2 绝对定位（absolute）"></a>1.2 绝对定位（absolute）</h3><blockquote><p>当元素的position属性值设置为absolute时，则开启了元素的绝对定位</p></blockquote><p>绝对定位特点：</p><ul><li>开启绝对定位后，如果不设置偏移量元素的位置不会发生变化</li><li>开启绝对定位后，元素会从文档流中脱离</li><li>绝对定位会改变元素性质，块变行内，块的宽高被内容撑开</li><li>绝对定位会使元素提升一个层级</li><li>绝对定位元素是相对于其<strong>包含块</strong>进行决定的</li></ul><p>包含块（containing block）：</p><ul><li><p>正常情况下</p><ul><li>包含块就是里当前元素最近的祖先<strong>块</strong>元素</li></ul></li><li><p>绝对定位的包含块</p><ul><li>包含块就是<strong>离它最近</strong>的、<strong>开启了定位</strong>的祖先块元素</li><li>如果所有祖先元素都没开启定位，则根元素（html，称初始包含块）就是它的包含块</li></ul></li></ul><h3 id="1-3-固定定位（fixed）"><a href="#1-3-固定定位（fixed）" class="headerlink" title="1.3 固定定位（fixed）"></a>1.3 固定定位（fixed）</h3><blockquote><p>当元素的position属性值设置为fixed时，则开启了元素的固定定位，固定定位也是一种绝对定位，大部分特点与绝对定位一样</p></blockquote><p>固定定位与绝对定位的不同：</p><ul><li>固定定位永远参照于浏览器的<strong>视口</strong>（可视窗口，与html不同，html是网页）进行定位</li><li>固定定位的元素不会随网页的滚动条滚动</li></ul><h3 id="1-4-粘滞定位（sticky）"><a href="#1-4-粘滞定位（sticky）" class="headerlink" title="1.4 粘滞定位（sticky）"></a>1.4 粘滞定位（sticky）</h3><blockquote><p>当元素的position属性值设置为sticky时，则开启了元素的粘滞定位，粘滞定位与相对定位基本一致，兼容性差，<strong>只做了解</strong></p></blockquote><p>粘滞定位与相对定位的不同：</p><ul><li>粘滞定位可以在元素到达某个位置时将其固定</li></ul><pre class=" language-css"><code class="language-css"><span class="token number">.</span>nav&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">1210</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">48</span>px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#E8E7E3</span><span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">100</span>px auto<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 粘滞定位 */</span>    <span class="token property">position</span><span class="token punctuation">:</span> sticky<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">1</span>px<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h3 id="1-5-绝对定位元素的位置"><a href="#1-5-绝对定位元素的位置" class="headerlink" title="1.5 绝对定位元素的位置"></a>1.5 绝对定位元素的位置</h3><blockquote><p>**包含块的内容区宽度 &#x3D; **</p><p><strong>left + margin-left + border-left + padding-left + width + padding-right + border-right + margin-right + right</strong></p><p>**含块的高度 &#x3D; **</p><p><strong>top + margin-top&#x2F;bottom + padding-top&#x2F;bottom  + border-top&#x2F;bottom + height</strong></p></blockquote><p>当开启了绝对定位后，水平方向的布局等式就需要添加 left 和 right 两个值，此时规则与之前一样</p><ul><li><p>过度约束（9值加在一起不满足等式）时，如果九值中没有 auto ，则自动调整<code>right</code>值以使等式满足</p></li><li><p>如果有auto，则自动调整auto的值以使等式满足</p><ul><li>可以设auto的值：<ul><li>margin、width、left、right</li></ul></li></ul></li><li><p>因为 left 和 right 的默认值是auto，所以如果不知道 left 和 right ，则等式不满足时，会自动调整这两个值</p><pre class=" language-css"><code class="language-css"><span class="token number">.</span>box<span class="token number">2</span>&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 开启绝对定位 */</span>    <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*水平居中一定要设置right和left*/</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre></li><li><p><strong>包含块的高度 &#x3D; top + margin-top&#x2F;bottom + padding-top&#x2F;bottom  + border-top&#x2F;bottom + height</strong></p><pre class=" language-css"><code class="language-css"><span class="token number">.</span>box<span class="token number">2</span>&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 开启绝对定位 */</span>    <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*垂直居中一定要设置right和left*/</span>    <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span>auto<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre></li><li><p>如果想要在正中心（既水平居中又垂直居中）</p><pre class=" language-css"><code class="language-css"><span class="token number">.</span>box<span class="token number">2</span>&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 开启绝对定位 */</span>    <span class="token property">position</span><span class="token punctuation">:</span>absolute<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> auto<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token property">margin-top</span><span class="token punctuation">:</span>auto<span class="token punctuation">;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> auto<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre></li></ul><h3 id="1-6-元素的层级"><a href="#1-6-元素的层级" class="headerlink" title="1.6 元素的层级"></a>1.6 元素的层级</h3><p>对于开启定位的元素，可以通过<code>z-index</code>属性来指定元素层级，<code>z-index</code>需要一个整数作为参数</p><ul><li>值越大，元素的层级越高，层级越高，越优先显示</li><li>如果元素层级一样，则优先显示靠下的元素</li><li>祖先元素层级再高，也无法盖住后代元素</li></ul><h2 id="2-字体族"><a href="#2-字体族" class="headerlink" title="2. 字体族"></a>2. 字体族</h2><p><code>font-size</code></p><ul><li>和font-size相关单位<ul><li>em 相当于当前元素的一个font-size</li><li>rem 相当于根元素的一个font-size</li></ul></li></ul><p><code>font-family</code></p><ul><li>字体样式（格式）</li><li>指定字体的类别，浏览器会自动使用该类别下的字体</li><li>可选值<ul><li>serif  衬线字体</li><li>sans-serif  非衬线字体</li><li>monospace  等宽字体</li></ul></li><li>可以同时指定多个字体，多个字体间使用<code>,</code>隔开，字体生效时优先使用第一个，第一个无法使用则会使用第2个</li></ul><pre class=" language-css"><code class="language-css"><span class="token property">font-family</span><span class="token punctuation">:</span> serif,monospace,sans-serif<span class="token punctuation">;</span></code></pre><h3 id="2-1-图标字体简介（iconfont）"><a href="#2-1-图标字体简介（iconfont）" class="headerlink" title="2.1 图标字体简介（iconfont）"></a>2.1 图标字体简介（iconfont）</h3><blockquote><p>在网页中经常需要使用一些图标，可以通过图片来引入图标，但是图片本身比较大，非常不灵活，所以在使用图表示，我们还可以将图标直接设置为字体，然后通过font-face的形式来对字体进行引入，这样就可以直接字体的形式来使用图标</p></blockquote><p>font awesome使用步骤：</p><ul><li>将css和webfonts移动到项目中</li><li>将all.css引入到网页中 <code>&lt;link rel=&quot;stylesheet&quot; href=&quot;./fa/css/all.css&quot;&gt;</code></li><li>使用图标字体<ul><li>直接通过类名使用图标字体 <code>  &lt;i class=&quot;fas fa-bell&quot;&gt;&lt;/i&gt;</code><ul><li><strong>其中<code>fas</code>是固定的（或者<code>fab</code>），后面的<code>fa-bell</code>是目标图标的类</strong></li></ul></li></ul></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web_CSS</title>
      <link href="/2023/10/20/web-css.float/"/>
      <url>/2023/10/20/web-css.float/</url>
      
        <content type="html"><![CDATA[<h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><h2 id="1-CSS基础"><a href="#1-CSS基础" class="headerlink" title="1. CSS基础"></a>1. CSS基础</h2><h3 id="1-1-超链接的伪类"><a href="#1-1-超链接的伪类" class="headerlink" title="1.1 超链接的伪类"></a>1.1 超链接的伪类</h3><p>超链接的几种状态：</p><ul><li>没有访问过的链接</li><li>访问过链接</li></ul><p>链接状态表示设置：</p><p> <strong>其中<code>link</code>和<code>visited</code>是超链接独有的，<code>hover</code>和<code>active</code>是通用的</strong></p><ul><li><code>link</code></li></ul><p>用来表示没访问过的链接（正常的链接）</p><pre class=" language-css"><code class="language-css">&lt;style>    <span class="token property">a</span><span class="token punctuation">:</span>link&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>&lt;/style></code></pre><ul><li><code>visited</code><ul><li>由于隐私的原因，visited这个伪类只能修改链接颜色</li></ul></li></ul><p>用来表示访问过的链接</p><pre class=" language-css"><code class="language-css"><span class="token property">a</span><span class="token punctuation">:</span>visited&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>     <span class="token property">color</span><span class="token punctuation">:</span>green&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><ul><li><code>hover</code></li></ul><p>不只用于超链接伪类，用来表示鼠标移入的状态，即鼠标移到链接字体上时，字体的改变</p><pre class=" language-css"><code class="language-css"><span class="token property">a</span><span class="token punctuation">:</span>hover&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span>orange<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>  &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><ul><li><code>active</code></li></ul><p>表示鼠标点击状态，即点集的一刹那链接字体的改变</p><pre class=" language-css"><code class="language-css"><span class="token property">a</span><span class="token punctuation">:</span>active&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h3 id="1-2-伪元素选择器"><a href="#1-2-伪元素选择器" class="headerlink" title="1.2 伪元素选择器"></a>1.2 伪元素选择器</h3><p>伪元素表示页面中一些特殊的、并不真实存在的元素</p><p><strong>伪元素使用<code>::</code>开头</strong></p><p>以下是对于<strong>p元素</strong>的伪元素选择器：</p><ul><li><code>::first-letter</code></li></ul><p>表示第一个字母</p><pre class=" language-css"><code class="language-css">&lt;style>    <span class="token property">p</span><span class="token punctuation">:</span><span class="token punctuation">:</span>first-letter&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">50</span>px<span class="token punctuation">;</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>&lt;/style></code></pre><ul><li><code>::first-line</code></li></ul><p>表示第一行</p><pre class=" language-css"><code class="language-css"><span class="token property">p</span><span class="token punctuation">:</span><span class="token punctuation">:</span>first-line&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*设置背景颜色*/</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><ul><li><code>::selection</code></li></ul><p>表示选中的内容</p><pre class=" language-css"><code class="language-css"><span class="token property">p</span><span class="token punctuation">:</span><span class="token punctuation">:</span>selection&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>pink<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><p>以下是对于<strong>div元素</strong>的伪元素选择器，<strong>这两个都需要结合<code>content</code>属性来使用</strong>：</p><blockquote><p> 在将来的开发中，这两个伪元素可以用来为某内容前后加标点符号，并且通过before和after加上的内容在网页中不可被选中</p></blockquote><ul><li><code>::before</code></li></ul><p>对div内容的前面（开始位置）进行操作</p><pre class=" language-css"><code class="language-css"><span class="token property">div</span><span class="token punctuation">:</span><span class="token punctuation">:</span>before&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">'abc'</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> brown<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><ul><li><code>::after</code></li></ul><p>对div内容的后面（结束位置）进行操作</p><pre class=" language-css"><code class="language-css"><span class="token property">div</span><span class="token punctuation">:</span><span class="token punctuation">:</span>after&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">'hha'</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h3 id="1-3-样式的继承"><a href="#1-3-样式的继承" class="headerlink" title="1.3 样式的继承"></a>1.3 样式的继承</h3><ul><li><p>当我们为一个元素设置一个样式时，这个样式也会应用在它的后代元素上</p></li><li><p>继承发生在祖先与后代之间的</p></li><li><p>继承的设计是为了开发，利用继承我们可以将一些通用的样式同一设置到共同的祖先元素上，这样只需要设置一次即可让所有元素都具有该样式</p></li><li><p>注意：不是所有样式都会继承（背景相关，布局相关）</p></li></ul><h3 id="1-4-选择器权重"><a href="#1-4-选择器权重" class="headerlink" title="1.4 选择器权重"></a>1.4 选择器权重</h3><blockquote><p> 样式冲突</p><ul><li>当我们通过不同选择器（class，id等），选中相同元素，并为相同的样式（color，font-size等）设置不同的值（red，20px）</li><li>发生样式冲突时，由选择器权重（优先级）决定</li></ul></blockquote><p>选择器权重：</p><ul><li><p><strong>内联样式 &gt; id选择器 &gt; 类和伪类选择器 &gt; 元素选择器 &gt; 通配选择器 &gt; 继承的样式</strong></p></li><li><p>交集选择器优先级大于交集选择器中最高优先级的选择器</p></li><li><p>越具体，优先级越高</p></li></ul><p>如果优先级相同，优先使用靠下的样式</p><p>可以在后面加个<code>!important</code>，则该样式会获得最高优先级</p><pre class=" language-css"><code class="language-css">div&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span>yellow <span class="token important">!important</span><span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h3 id="1-5-像素和百分比"><a href="#1-5-像素和百分比" class="headerlink" title="1.5 像素和百分比"></a>1.5 像素和百分比</h3><p>长度单位：</p><ul><li><p>像素</p><ul><li>屏幕（显示器）实际上是由一个个小点点构成</li><li>不同屏幕大小像素大小不同，像素越小的屏幕越清晰</li><li>同样的200px在不同设备下显示效果不同</li></ul></li><li><p>百分比</p><ul><li>可以设置属性相对于其父元素属性的百分比</li><li>可以使子元素跟随父元素改变</li></ul></li><li><p>em</p><ul><li>em是相对于自身元素的字体大小来计算的</li><li>1em &#x3D; 1font-size</li><li>em会根据字体大小（font-size）改变而改变</li></ul></li><li><p>rem</p><ul><li>相对于根元素（html）的字体大小来计算</li></ul></li></ul><h3 id="1-6-颜色单位"><a href="#1-6-颜色单位" class="headerlink" title="1.6 颜色单位"></a>1.6 颜色单位</h3><blockquote><p>在css中可以用颜色名作颜色单位，但是不方便记忆，所以可以使用RGB、RGBA、HSL、HSLA</p></blockquote><p>RGB</p><ul><li><p>通过三种颜色不同的浓度调配不同颜色</p></li><li><p>R red G green B blue</p></li><li><p>每一种颜色范围在0 - 255 （0% - 100%）之间</p></li><li><p>语法：<code>RGB(红色,绿色,蓝色)</code></p></li><li><p>十六进制的RGB值</p><ul><li>语法<code>#红色绿色蓝色</code></li><li>颜色浓度范围：00 - ff（eg：#23A966）</li><li>如果三个颜色都两位重复可以简写</li></ul></li></ul><pre class=" language-css"><code class="language-css">&lt;style>    <span class="token number">.</span>box<span class="token number">1</span>&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/* 颜色单位 */</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token function">RGB</span><span class="token punctuation">(</span><span class="token number">100</span>,<span class="token number">20</span>,<span class="token number">30</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>&lt;/style></code></pre><p>RGBA</p><ul><li>比RGB多一个不透明度</li><li>透明度范围为0 - 1（1为完全不透明，0为完全透明）</li><li>语法：<code>RGB(红色,绿色,蓝色,透明度)</code></li></ul><p>HSL</p><ul><li>H 色相（0-360） S 饱和度（0%-100%） L 亮度（0%-100%）</li></ul><h2 id="2-布局layout"><a href="#2-布局layout" class="headerlink" title="2. 布局layout"></a>2. 布局layout</h2><h3 id="2-1-文档流"><a href="#2-1-文档流" class="headerlink" title="2.1 文档流"></a>2.1 文档流</h3><blockquote><p>网页是一个多层的结构，一层摞着一层，通过css可以分别为每一层设置样式，作为用户只能看见最上边的一层，这些层中，最底下的一层叫做文档流，文档流是一个网页的基础，我们所创建的元素，默认都是在文档流中进行排列</p><p>对于我们来说，元素主要有两个状态：在文档流中，不在文档流中（脱离文档流）</p></blockquote><p>元素在文档流中的特点：</p><ul><li><p>块元素</p><ul><li>块元素会在页面中独占一行（自上向下排列）</li><li>默认宽度是父元素的全部（会把父元素撑满）</li><li>默认高度会被内容撑开（子元素）</li></ul></li><li><p>行内元素</p><ul><li>行内元素不会在页面独占一行，只占自身大小</li><li>行内元素在页面中自左向右水平排列，如果一行中不能容纳下所有行内元素，则元素会换到第二行继续自左向右排列</li><li>行内元素的默认宽度和高度都是被内容撑开</li></ul></li></ul><h3 id="2-2-盒子模型（框模型）"><a href="#2-2-盒子模型（框模型）" class="headerlink" title="2.2 盒子模型（框模型）"></a>2.2 盒子模型（框模型）</h3><blockquote><p>css见个面中所有元素都设置成一个矩形的盒子，所谓的布局就是将不同的盒子放到不同的位置</p><p>内容区、内边距、边框决定盒子大小，外边距决定盒子位置</p></blockquote><p>盒子的构成：</p><ul><li>内容区（content）<ul><li>元素中的所有的子元素和文本内容都在内容区中</li><li>内容区大小由height和width两个属性设置</li></ul></li><li>内边距（padding）</li><li>边框（border）<ul><li>边框属于盒子边缘，边框里面属于盒子内部，出了边框都是盒子的外部</li><li>边框的大小会影响整个盒子的大小</li><li>设置边框至少需要设置三个样式：<ul><li>边框的宽度 border-width<ul><li>默认值为3px</li></ul></li><li>边框的颜色 border-color</li><li>边框的样式 border-style</li></ul></li></ul></li><li>外边距（margin）</li></ul><pre class=" language-css"><code class="language-css">&lt;!DOCTYPE html>&lt;html lang=<span class="token string">"en"</span>>&lt;head>    &lt;meta charset=<span class="token string">"UTF-8"</span>>    &lt;meta http-equiv=<span class="token string">"X-UA-Compatible"</span> content=<span class="token string">"IE=edge"</span>>    &lt;meta name=<span class="token string">"viewport"</span> content=<span class="token string">"width=device-width, initial-scale=1.0"</span>>    &lt;title>Document&lt;/title>    &lt;style>        <span class="token number">.</span>box<span class="token number">1</span>&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* 内容区 */</span>            <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#bfa</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* 边框（border） */</span>            <span class="token property">border-width</span><span class="token punctuation">:</span> <span class="token number">10</span>px<span class="token punctuation">;</span>            <span class="token property">border-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>            <span class="token property">border-style</span><span class="token punctuation">:</span> solid<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/*solid表示实线*/</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    &lt;/style>&lt;/head>&lt;body>    &lt;div class=<span class="token string">"box1"</span>>&lt;/div>&lt;/body>&lt;/html></code></pre><h4 id="2-2-1-盒子模型-边框（border）"><a href="#2-2-1-盒子模型-边框（border）" class="headerlink" title="2.2.1 盒子模型-边框（border）"></a>2.2.1 盒子模型-边框（border）</h4><blockquote><p>border-color、border-style与border-width规则相同如下</p></blockquote><p><strong>边框</strong></p><ul><li><p>border-width：</p><ul><li><p>值的情况</p><ul><li><p>四个值：上、右、下、左（<code>border-width: 10px 20px 30px 40px;</code>）</p></li><li><p>三个值：上、左右、下（<code>border-width: 10px 20px 30px;</code>）</p></li><li><p>两个值：上下、左右（<code>border-width: 10px 20px;</code>）</p></li><li><p>一个值：上下左右（<code>border-width: 10px;</code>）</p></li></ul></li><li><p>除了border-width，还可以是border-xxx-width</p><ul><li>xxx可以是top right bottom left</li></ul></li></ul></li><li><p>border-style的值及意义</p><ul><li><p>默认值为none</p></li><li><p>solid 表示实线</p></li><li><p>dotted 表示点状虚线</p></li><li><p>dashed 表示线装虚线</p></li><li><p>double 表示双线</p></li></ul></li><li><p>border简写属性（通过该属性可以同时设置边框所有的相关样式，并且没有顺序要求）</p><ul><li>语法：border:width color style（eg：<code>border:10px orange solid;</code>）</li><li>还可以写成border-xxx，xxx可以为：<ul><li>top bottom left right（eg：<code>border-top:10px green solid;</code> ）</li></ul></li></ul></li></ul><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*如果不想要右边的边框*/</span><span class="token number">.</span>box<span class="token number">1</span>&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">10</span>px green solid<span class="token punctuation">;</span>    <span class="token property">border-right</span><span class="token punctuation">:</span>none<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h4 id="2-2-2-盒子模型-内边距（padding）"><a href="#2-2-2-盒子模型-内边距（padding）" class="headerlink" title="2.2.2 盒子模型-内边距（padding）"></a>2.2.2 盒子模型-内边距（padding）</h4><p>内容区和边框之间的距离是内边距，<strong>一个盒子的可见框大小由内容区、内边距和边框共同决定</strong>，所以计算盒子大小时，需要将这三个区域加到一起计算</p><p><strong>内边距</strong></p><ul><li>内边距的设置会影响盒子的大小</li><li>背景颜色会延伸到内边距上</li><li>有四个方向的内边距 padding-xxx<ul><li>xxx为top right bttom left</li></ul></li><li>padding简写属性，可同时指定四个方向的内边距<ul><li>四值顺序：上、右、下、左（eg：<code>padding:10px 20px 30px 40px</code>）</li><li>三值顺序：上、左右、下</li><li>二值顺序：上下、左右</li><li>一值顺序：上下左右</li></ul></li></ul><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*head内*/</span>&lt;style>    <span class="token number">.</span>box<span class="token number">1</span>&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#bfa</span><span class="token punctuation">;</span>        <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">10</span>px orange solid<span class="token punctuation">;</span>        <span class="token property">padding-top</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    <span class="token number">.</span>inner&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100%</span><span class="token punctuation">;</span>        <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>&lt;/style>&lt;body>    &lt;div class=<span class="token string">"box1"</span>>        <span class="token comment" spellcheck="true">/*inner是box1的内容区，即填满inner即可展现内容区与内边距的面积区别*/</span>        &lt;div class=<span class="token string">"inner"</span>>&lt;/div>    &lt;/div>&lt;/body></code></pre><h4 id="2-2-3-盒子模型-外边距（margin）"><a href="#2-2-3-盒子模型-外边距（margin）" class="headerlink" title="2.2.3 盒子模型-外边距（margin）"></a>2.2.3 盒子模型-外边距（margin）</h4><p>外边距不会影响盒子可见框大小，会影响盒子的位置</p><p><strong>外边距</strong></p><ul><li><p>四方向外边距（margin-top、bottom、left、right）</p><ul><li><p>margin-top</p><ul><li>设置一个正值，元素向下移动</li></ul></li><li><p>margin-left</p><ul><li>设置一个正值，元素向右移动</li></ul></li><li><p>margin-bottom</p><ul><li>设置一个正值，其下边元素向下移动</li></ul></li><li><p>margin-right</p><ul><li>默认情况下设置right不会产生任何效果</li></ul></li><li><p>设置一个负值，会向相反方向移动</p></li></ul></li><li><p>margin简写属性</p><ul><li><code>margin(10px 20px 30px 40px)</code>，同样有四值、三值、二值、一值，与上同理</li></ul></li></ul><h3 id="2-3-盒子模型-水平方向的布局"><a href="#2-3-盒子模型-水平方向的布局" class="headerlink" title="2.3 盒子模型-水平方向的布局"></a>2.3 盒子模型-水平方向的布局</h3><blockquote><p>元素在其父元素中水平方向的位置有以下几个属性共同决定：</p><ul><li>margin-left、border-left、padding-left</li><li>width</li><li>padding-right、border-right、margin-right</li></ul></blockquote><p><strong>一个元素在其父元素中，水平布局必须满足以下等式：</strong></p><p><strong>margin-left + border-left + padding-left + width + padding-right + border-right + margin-right &#x3D; 其父元素内容区的宽度</strong></p><p>如果根据已确定值（不确定值默认为0）的相加结果不满足上等式，则称为过度约束，则等式会自动调整：</p><ul><li><p>七值中有三值可以设置为auto（magin-left、margin-right、width，eg：<code>width:auto;</code>）</p></li><li><p>调整情况：</p><ul><li><p>0auto：如果这七个值里没有为auto的情况，则浏览器会自动调整margin-right值以使等式满足</p></li><li><p>1auto：如果某个值为auto，则会自动调整为auto的值以使等式成立</p></li><li><p>2auto：如果一个宽度和一个外边距设置为auto，则宽度会调整到最大，设置为auto的外边距会自动为0</p></li><li><p>2auto：如果将两个外边距设置为auto，width为固定值，则会将两外边距设为相同的值</p><ul><li><p>经常利用这个特点来使一个元素在其父元素水平居中</p><pre class=" language-css"><code class="language-css"><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span> auto<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*两值：上下、左右*/</span></code></pre></li></ul></li><li><p>3auto：如果三个值都设置为auto，则外边距都是0，宽度最大</p></li></ul><p><strong>总结：设置了width为auto，则其他设置为auto的会变为0</strong></p></li></ul><h3 id="2-4-盒子模型-垂直方向的布局"><a href="#2-4-盒子模型-垂直方向的布局" class="headerlink" title="2.4 盒子模型-垂直方向的布局"></a>2.4 盒子模型-垂直方向的布局</h3><blockquote><p> 默认情况下，父元素的高度被内容撑开</p><p> 子元素是在父元素的内容区排列的，如果子元素的大小超过了父元素，则子元素会从父元素中溢出</p></blockquote><p>使用<code>overflow</code>属性来设置父元素如何处理溢出的子元素</p><ul><li><p>可选值：</p><ul><li>visible 默认值，子元素从父元素溢出，在父元素外部的位置显示</li><li>hidden 溢出的内容将会被剪裁不会显示</li><li>scroll 生成两个滚动条，通过滚动条查看完整内容</li><li>auto 根据需要生成滚动条</li></ul></li><li><p>除此之外还有overflow-x、overflow-y</p></li></ul><h4 id="2-4-1-外边距折叠"><a href="#2-4-1-外边距折叠" class="headerlink" title="2.4.1 外边距折叠"></a>2.4.1 外边距折叠</h4><blockquote><p><strong>相邻</strong>的<strong>垂直</strong>方向外边距会发生重叠现象</p></blockquote><p>相邻的元素的关系：</p><ul><li>兄弟元素<ul><li>当两者都是正值或都是负值时，兄弟元素之间的相邻垂直外边距会取两者之间绝对值较大的（取绝对值较大的）</li><li>当一正一负时，取两者的和</li></ul></li></ul><p>兄弟元素之间的重叠是对开发有利的，不需要进行处理</p><ul><li>父子元素<ul><li>父子元素间的相邻外边距，子元素的会传递给父元素（上外边距）</li></ul></li></ul><p>父子外边距影响页面布局，必须进行处理</p><h3 id="2-5-行内元素的盒模型"><a href="#2-5-行内元素的盒模型" class="headerlink" title="2.5 行内元素的盒模型"></a>2.5 行内元素的盒模型</h3><ul><li><p>行内元素不支持设置width和height</p></li><li><p>行内元素可以设置padding、border、margin，但垂直方向的padding、borderr、margin不会影响页面的布局</p></li></ul><p>将行内元素变为块元素——用属性<code>display</code></p><p><code>display</code>用来设置元素显示的<strong>类型</strong></p><ul><li><p>可选值：</p><ul><li><p>inline 将元素设置为行内元素</p></li><li><p>block 将元素设置为块元素</p></li><li><p>inline-block 行内块元素</p><ul><li>即可以设置width和height，又不会独占一行</li></ul></li><li><p>table 将元素设置为一个表格</p></li><li><p>none 元素不在页面中显示</p><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*style内*/</span>a&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/* 属性display */</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>     <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*body内*/</span>&lt;a href=<span class="token string">"javascript:;"</span>>超链接&lt;/a>   <span class="token comment" spellcheck="true">/*a本来是行内元素，block变为块元素，使width和height属性生效*/</span></code></pre></li></ul></li></ul><p><code>visibility</code>用来设置元素的显示<strong>状态</strong></p><ul><li>可选值<ul><li>visible 默认值，元素在页面中正常显示</li><li>hidden 元素在页面中隐藏<ul><li>与display的none的区别是，hidden依然保留原来块所占的位置，none不保存</li></ul></li></ul></li></ul><h3 id="2-6-浏览器的默认样式"><a href="#2-6-浏览器的默认样式" class="headerlink" title="2.6 浏览器的默认样式"></a>2.6 浏览器的默认样式</h3><blockquote><p>通常情况下，浏览器都会为元素设置一些默认样式，默认样式的存在会影响页面的布局</p><p>通常情况下，编写网页时，必须要去除浏览器的默认样式（PC端网页）</p></blockquote><p><em>通过网页页面–&gt;右键点击检查–&gt;点击左上角鼠标–&gt;可查看个元素盒子模型的属性值</em></p><p><strong>最推荐——引入重置样式表清除</strong></p><ul><li>link引入的文件一定要在style标签上面！！</li><li>文件<ul><li>reset .css 直接去除了浏览器的默认样式</li><li>normalize.css 对默认样式进行了统一</li></ul></li></ul><pre class=" language-css"><code class="language-css">&lt;!DOCTYPE html>&lt;html lang=<span class="token string">"en"</span>>&lt;head>    &lt;meta charset=<span class="token string">"UTF-8"</span>>    &lt;meta http-equiv=<span class="token string">"X-UA-Compatible"</span> content=<span class="token string">"IE=edge"</span>>    &lt;meta name=<span class="token string">"viewport"</span> content=<span class="token string">"width=device-width, initial-scale=1.0"</span>>    &lt;title>Document&lt;/title>    <span class="token comment" spellcheck="true">/*方法三，引入reset文件清除*/</span>    <span class="token comment" spellcheck="true">/*&lt;link rel="stylesheet" href="./css/reset.css">*/</span>    &lt;link rel=<span class="token string">"stylesheet"</span> href=<span class="token string">"./css/normalize.css"</span>>    &lt;style>        <span class="token number">.</span>box<span class="token number">1</span>&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span><span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid black<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token comment" spellcheck="true">/*方法一，一个个标签清除*/</span>        <span class="token comment" spellcheck="true">/* p&amp;#123;            margin:0px;        &amp;#125;        body&amp;#123;            margin:0;        &amp;#125;        ul&amp;#123;            margin:0;            margin-left:20px;            padding:0;            /*去除项目符号 * /            list-style: none;        &amp;#125;  */</span>                <span class="token comment" spellcheck="true">/* 方法二，通配选择器清除 */</span>        <span class="token comment" spellcheck="true">/* *&amp;#123;            margin:0;            padding:0;        &amp;#125; */</span>    &lt;/style>&lt;/head>&lt;body>    &lt;div class=<span class="token string">"box1"</span>>&lt;/div>    &lt;p>我是一个段落&lt;/p>    &lt;ul>        &lt;li>列表项<span class="token number">1</span>&lt;/li>        &lt;li>列表项<span class="token number">2</span>&lt;/li>        &lt;li>列表项<span class="token number">3</span>&lt;/li>    &lt;/ul>&lt;/body>&lt;/html></code></pre><h3 id="2-7-盒子大小"><a href="#2-7-盒子大小" class="headerlink" title="2.7 盒子大小"></a>2.7 盒子大小</h3><blockquote><p>默认情况下，盒子可见框大小&#x3D;内容区 + 内边距 + 边框</p></blockquote><p>属性<code>box-sizing</code></p><ul><li>可选值<ul><li>content-box 默认值，width和height用来设置内容区的大小</li><li>border-box width和height用来设置整个盒子可见框大小<ul><li>即width和height指的是内容区和内边距和边框的总大小</li></ul></li></ul></li></ul><h3 id="2-8-轮廓阴影和圆角"><a href="#2-8-轮廓阴影和圆角" class="headerlink" title="2.8 轮廓阴影和圆角"></a>2.8 轮廓阴影和圆角</h3><h4 id="2-8-1-轮廓"><a href="#2-8-1-轮廓" class="headerlink" title="2.8.1 轮廓"></a>2.8.1 轮廓</h4><p><code>outline</code>用来设置元素的轮廓线，用法和border一样</p><ul><li>轮廓<code>outline</code>和边框<code>border</code>的区别是，轮廓不会影响可见框大小，<strong>轮廓不会影响页面布局</strong></li></ul><h4 id="2-8-2-阴影"><a href="#2-8-2-阴影" class="headerlink" title="2.8.2 阴影"></a>2.8.2 阴影</h4><p><code>box-shadow</code>用来设置元素的阴影效果，<strong>阴影不会影响页面布局</strong></p><ul><li>可选值：<ul><li>水平偏移量，设置阴影水平位置，正值向右移动，负值向左移动</li><li>垂直偏移量，设置阴影垂直位置，正下负上</li><li>模糊半径</li><li>颜色</li><li>eg：<code>box-shadow:20px 20px 20px rgba(0,0,0,.3);</code></li></ul></li></ul><img src="E:\前端\笔记截图\屏幕截图 2023-03-30 204518.png" alt="阴影效果图" style="zoom:50%;" /><h4 id="2-8-3-圆角"><a href="#2-8-3-圆角" class="headerlink" title="2.8.3 圆角"></a>2.8.3 圆角</h4><p><code>border-radius</code>用来设置圆角，圆角设置的值是圆的半径大小</p><ul><li><p>还可以细分：</p><ul><li><code>border-top-left-radius</code></li><li><code>border-top-right-radius</code></li><li><code>border-bottom-left-radius</code></li><li><code>border-bottom-right-radius</code></li></ul></li><li><p>可选值</p><ul><li>一值就是圆的半径</li><li>两值是椭圆的半径，左上和右下、右上和左下，第一值是水平半径，第二值是垂直半径</li><li>三个值 左上、右下和左下、右下</li><li>四个值 左上、右上、右下、左下</li></ul></li></ul><h2 id="3-浮动（float）"><a href="#3-浮动（float）" class="headerlink" title="3. 浮动（float）"></a>3. 浮动（float）</h2><h3 id="3-1-浮动的简介"><a href="#3-1-浮动的简介" class="headerlink" title="3.1 浮动的简介"></a>3.1 浮动的简介</h3><blockquote><p> 通过浮动可以使一个元素向它的父元素的左侧或右侧移动</p></blockquote><p>使用<code>float</code>属性来设置元素的浮动</p><ul><li>可选值<ul><li>none 默认值，元素不移动</li><li>left 元素向左移动</li><li>right 元素向右移动</li></ul></li></ul><p><strong>元素设置浮动以后，水平布局的等式偏不需要强制成立</strong></p><p><strong>元素设置完浮动以后，会完全从文档流中脱离出来，不在占用文档流的位置，所以文档下面的还在文档流中的元素会自动向上移</strong></p><p>浮动特点：</p><ul><li>浮动元素会完全脱离文档流，不再占用文档流中的位置</li><li>设置浮动以后，元素会向父元素的左侧或右侧移动</li><li>浮动元素默认不会从父元素中移出</li><li>浮动元素向左或向右移动时，不会超过它前面的其他浮动元素</li><li>如果浮动元素的上面是一个没有浮动的块元素，则浮动元素无法上移</li><li>浮动元素不会超点他上边的浮动的兄弟元素，最多最多就是和他一样高</li></ul><h3 id="3-2-浮动的特点"><a href="#3-2-浮动的特点" class="headerlink" title="3.2 浮动的特点"></a>3.2 浮动的特点</h3><p>特点：</p><ul><li>浮动元素不会盖住文字，文字会自动环绕在浮动元素的周围<ul><li>可以利用浮动设置文字环绕图片的效果</li></ul></li><li>元素设置浮动后，将会从文档流中脱离，元素的一些特点也会发生改变<ul><li>脱离文档流特点：<ul><li>块元素：<ul><li>块元素不在独占页面的一行</li><li>脱离文档流以后，块元素的宽度和高度都默认被内容撑开</li></ul></li><li>行内元素：<ul><li>行内元素脱离文档流以后会变成块元素，特点和块元素一样</li></ul></li><li>脱离文档流以后不再需要区分块和行内</li></ul></li></ul></li></ul><h3 id="3-3-简单布局"><a href="#3-3-简单布局" class="headerlink" title="3.3 简单布局"></a>3.3 简单布局</h3><blockquote><p>可以简单的将页面看成上（header）、中（main）、下（footer）三个部分，再在三个部分细分</p></blockquote><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 创建网页头部 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>header</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>header</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 创建网页主体 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>main</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 左侧导航 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>nav</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>nav</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 中间内容 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>article</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>article</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 右边栏 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>aside</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>aside</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>main</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 网页的底部 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>效果图：<br><img src="E:\前端\笔记截图\简单布局.png" alt="效果图"></p><h3 id="3-4-高度塌陷和BFC"><a href="#3-4-高度塌陷和BFC" class="headerlink" title="3.4 高度塌陷和BFC"></a>3.4 高度塌陷和BFC</h3><blockquote><p>高度塌陷问题：在浮动布局中，父元素默认被子元素撑开，当子元素浮动后，其会完全脱离文档流，子元素从文档流中脱离将会无法撑起父元素的高度，导致父元素的高度丢失，父元素丢失以后，其下的元素会自动上移，导致页面布局混乱</p><p>高度塌陷问题是布局中比较常见的问题，用<strong>BFS</strong>（块级格式化环境）来进行处理</p></blockquote><ul><li><p>BFC：是CSS中一个隐含属性，可以为一个元素开启BFC，开启后，该元素会变成一个独立的布局区域</p></li><li><p>元素开启BFC后的特点：</p><ol><li>开启BFC的元素不会被浮动元素覆盖</li><li>开启BFC的元素子元素和父元素外边距不会重叠</li><li>开启BFC的元素可以包含浮动的子元素</li></ol></li><li><p>可以通过一些特殊方式来开启BFC</p><ol><li>设置元素浮动</li><li>将元素设置为行内块元素</li><li>将元素的overflow值设为一个<strong>非visible</strong>的值，用auto或hidden（推荐）</li></ol></li></ul><h3 id="3-5-clear"><a href="#3-5-clear" class="headerlink" title="3.5 clear"></a>3.5 clear</h3><blockquote><p>如果不希望某个个元素因为其他元素浮动的影响而改变位置，可以通过<strong>clear属性</strong>来清除浮动元素对当前元素产生的影响</p></blockquote><p>clear：</p><ul><li>可选值<ul><li>left 清除左侧浮动元素对当前元素的影响</li><li>right 清除右侧浮动元素对当前元素的影响</li><li>both 清除两侧中较大的那侧</li></ul></li><li>原理<ul><li>设置清除浮动以后，浏览器会自动为元素添加一个上外边距，以使其位置不受其他元素的影响</li></ul></li></ul><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token number">.</span>box<span class="token number">1</span>&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">border</span><span class="token punctuation">:</span><span class="token number">10</span>px red solid<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>box<span class="token number">2</span>&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#bfa</span><span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>box<span class="token number">3</span>&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">clear</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- aa --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><p>利用after伪类解决高度塌陷</p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--head内--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token number">.</span><span class="token property">box1</span><span class="token punctuation">:</span><span class="token punctuation">:</span>after&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">;</span>        <span class="token property">clear</span><span class="token punctuation">:</span>both<span class="token punctuation">;</span>         <span class="token comment" spellcheck="true">/*取消浮动元素的影响*/</span>        <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*将行内元素转换为块元素*/</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--body内--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><h4 id="3-5-1-clearfix"><a href="#3-5-1-clearfix" class="headerlink" title="3.5.1 clearfix"></a>3.5.1 clearfix</h4><p><code>clearfix</code>可以同时解决高度塌陷和外边距重叠问题，遇到问题直接使用<code>clearfix</code>这个类即可</p><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>X-UA-Compatible<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>IE<span class="token punctuation">=</span>edge<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>viewport<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>width<span class="token punctuation">=</span>device-width, initial-scale<span class="token punctuation">=</span>1.0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token number">.</span>box<span class="token number">1</span>&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> <span class="token hexcode">#bfa</span><span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>box<span class="token number">2</span>&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>            <span class="token property">background-color</span><span class="token punctuation">:</span> orange<span class="token punctuation">;</span>            <span class="token property">margin-top</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span><span class="token property">clearfix</span><span class="token punctuation">:</span><span class="token punctuation">:</span>before,        <span class="token number">.</span><span class="token property">clearfix</span><span class="token punctuation">:</span><span class="token punctuation">:</span>after&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">content</span><span class="token punctuation">:</span><span class="token string">''</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">/* tabel解决塌陷与外边距重叠 */</span>            <span class="token property">display</span><span class="token punctuation">:</span>table<span class="token punctuation">;</span>            <span class="token property">clear</span><span class="token punctuation">:</span>both<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box1  clearfix<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>box2<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Web_html+css初入门</title>
      <link href="/2023/10/20/web-html-css-chu-ru-men/"/>
      <url>/2023/10/20/web-html-css-chu-ru-men/</url>
      
        <content type="html"><![CDATA[<h1 id="前端"><a href="#前端" class="headerlink" title="前端"></a>前端</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><ul><li>HTML 结构</li><li>CSS 表现</li><li>JavaScript 行为</li></ul><h2 id="1-HTML"><a href="#1-HTML" class="headerlink" title="1. HTML"></a>1. HTML</h2><p>超文本标记语言</p><p>使用标签的形式来标识网页中不同组成部分</p><p>在使用html标签时，要关注的是标签的<strong>语义</strong>，而不是样式</p><h3 id="1-1-基本架构"><a href="#1-1-基本架构" class="headerlink" title="1.1 基本架构"></a>1.1 基本架构</h3><p>文档声明用来告诉浏览器当前网页的版本（html5的声明）</p><p><code>head</code> 内容不会出现在网页中</p><p><code>title</code> 搜索结果的超链接上的文字显示，搜索引擎根据title判断网页内容</p><p><code>body</code> 是网页主体</p><p><em>在VS中，有Preview on web server插件后，可以用ctrl+shift+v开启预览</em></p><p><em>shift+out+f可以格式化文档</em></p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--完整结构--></span><span class="token doctype">&lt;!doctype html></span>                    <span class="token comment" spellcheck="true">&lt;!--网页声明--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                             <span class="token comment" spellcheck="true">&lt;!--根标签--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>                         <span class="token comment" spellcheck="true">&lt;!--子标签--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token comment" spellcheck="true">&lt;!--字符集--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keyword<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>HTML,前端,CSS3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>                    <span class="token comment" spellcheck="true">&lt;!--后代（网页标题）--></span>                  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>                         <span class="token comment" spellcheck="true">&lt;!--子标签--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>\h1</span><span class="token punctuation">></span></span>                <span class="token comment" spellcheck="true">&lt;!--标题名（一级，共六级）--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>   <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>\p</span><span class="token punctuation">></span></span>                 <span class="token comment" spellcheck="true">&lt;!--段落名--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--自结束标签--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span>          <span class="token comment" spellcheck="true">&lt;!--换行标签--></span></code></pre><h3 id="1-2-标签基本属性（不建议用）"><a href="#1-2-标签基本属性（不建议用）" class="headerlink" title="1.2 标签基本属性（不建议用）"></a>1.2 标签基本属性（不建议用）</h3><p>可以在标签中（开始标签或<strong>自结束</strong>标签）设置属性，属性是一个名值对结构，用来设置标签中内容如何显示</p><p><em><strong>不能在结束标签中设置属性</strong></em></p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--用&lt;font>--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>这是<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">color</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>red<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>第一个<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span>网页<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span></code></pre><h3 id="1-3-meta标签（字符集）"><a href="#1-3-meta标签（字符集）" class="headerlink" title="1.3 meta标签（字符集）"></a>1.3 meta标签（字符集）</h3><p><code>meta</code>标签用于设置网页中的一些元数据，元数据不是给用户看的</p><ul><li><p>属性<code>charset </code>指定网页的字符集</p></li><li><p>属性<code>name </code>指定数据的名称</p><ul><li>值<code>keyword</code>表示网站关键字，可以同时指定多个关键字，各关键字之间用英文逗号隔开</li><li>值<code>description</code> 用于指定网站的描述，会显示在搜索引擎的搜索结果中</li></ul></li><li><p>属性<code>content </code>指定数据内容</p><ul><li><code>content</code>后跟的数字表示多少秒后跳转页面，url后的地址表示要跳转到的网站地址</li></ul></li></ul><p>在开发时，我们使用的字符集都是UTF-8，用meta标签设置网页字符集，避免乱码</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>keywords<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>HTML,前端,CSS3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>description<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>这门课程很好的讲述了前端的基本架构。。。。。。<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!--将页面重定向到另一个网站--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">http-equiv</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>refresh<span class="token punctuation">"</span></span> <span class="token attr-name">content</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>10;url<span class="token punctuation">=</span>https://www.csdn.net/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><h3 id="1-4-实体（转义）"><a href="#1-4-实体（转义）" class="headerlink" title="1.4 实体（转义）"></a>1.4 实体（转义）</h3><p>在HTML中，有时候不能直接书写一些特殊符号：</p><ul><li>在编写网页中编写多个空格，浏览器会解析成一个空格</li><li>字母两侧大于小于</li></ul><p><em>注意结尾有分号”;”</em></p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--语法：&amp;实体的名字eg:转义空格：&amp;nbsp;转义大于号：&amp;gt;转移小于号：&amp;lt;--></span></code></pre><h3 id="1-5-语义化标签"><a href="#1-5-语义化标签" class="headerlink" title="1.5 语义化标签"></a>1.5 语义化标签</h3><p>再次强调！<strong>关注标签的语义，而不是样式</strong></p><blockquote><p>块元素：在页面中独占一行的元素</p><p>在网页中进行布局</p></blockquote><ul><li>标题标签：一共有六级（<code>h1</code>~&#96;h6&#96;），一般情况下，一个网页只有一个一级标签<ul><li>有相连关系的标题标签可以放进<code>hgroup</code>中进行分组</li></ul></li><li>段落标签：<code>p</code></li><li>引用标签：<code>blockquote</code>，表示一个长引用</li></ul><hr><blockquote><p>行内元素：在页面中<strong>不会</strong>独占一行的元素</p><p>主要用于包裹文字</p></blockquote><ul><li><code>em</code>标签：表示语义语音的加重</li><li><code>strong</code>标签：表示强调重要内容</li><li><code>q</code>标签：短引用</li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>hgroup</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>回乡偶书<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h2</span><span class="token punctuation">></span></span>其一<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h2</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>hgroup</span><span class="token punctuation">></span></span></code></pre><p>块元素与行内元素使用规则：</p><ul><li>一般情况下，会在块元素内放行内元素，而不会在行内元素中放块元素</li><li>块元素中基本什么都能放</li><li>p元素中不能放块元素</li></ul><hr><blockquote><p>布局标签（结构化语义标签）</p><p>加入css查看效果</p></blockquote><ul><li><code>header </code>表示网页头部</li><li><code>main </code>表示网页主体（一个网页只有一个）</li><li><code>footer</code> 表示网页底部</li><li><code>nav</code> 网页的导航</li><li><code>aside</code> 和主体相关的其他内容（侧边栏）</li><li><code>article  </code>表示独立的一个文章</li><li><code>section</code> 表示一个独立的区块，上边的标签都不能表示时使用section</li><li><strong><code>div</code> 没有语义，就用来表示一个区块，是主要的布局元素（可以代替上面所有）</strong></li><li><strong><code>span</code> 行内元素，没有语义，一般用于在网页中选中文字</strong></li></ul><h3 id="1-6-列表"><a href="#1-6-列表" class="headerlink" title="1.6 列表"></a>1.6 列表</h3><p>列表分为无序列表、有序列表、定义列表</p><p>列表之间可以互相嵌套</p><h4 id="1-6-1-无序列表（常用）"><a href="#1-6-1-无序列表（常用）" class="headerlink" title="1.6.1 无序列表（常用）"></a>1.6.1 无序列表（常用）</h4><p><code>ul</code>标签创建无序列表，li标签表示列表项</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>第一个无序列表项<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>第二个无序列表项<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>第三个无序列表项<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span></code></pre><h4 id="1-6-2-有序列表"><a href="#1-6-2-有序列表" class="headerlink" title="1.6.2 有序列表"></a>1.6.2 有序列表</h4><p><code>ol</code>创建有序列表，li标签表示列表项</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ol</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>第一个有序列表项<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>第二个有序列表项<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>第三个有序列表项<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ol</span><span class="token punctuation">></span></span></code></pre><h4 id="1-6-3-定义列表"><a href="#1-6-3-定义列表" class="headerlink" title="1.6.3 定义列表"></a>1.6.3 定义列表</h4><p><code>dl</code>标签创建一个定义列表，dt表示定义内容·，dd表示对内容进行解释说明</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">></span></span>定义列表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">></span></span>对定义列表进行解释说明<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">></span></span></code></pre><h3 id="1-7-超链接"><a href="#1-7-超链接" class="headerlink" title="1.7 超链接"></a>1.7 超链接</h3><p>超链接可以让我们从一个页面跳转到另一个页面，或者是当前页面的其他位置</p><p><strong>用<code>a</code>标签来定义超链接，是行内元素，可以嵌套除它自身外任何元素</strong></p><hr><blockquote><p>以下是实现跳转到另一个页面的功能</p></blockquote><ul><li>属性<code>href </code>指定跳转的目标路径<ul><li>值可以是外部网站的一个地址</li><li>也可以写一个内部页面的地址（相对路径需要在一个文件夹内）</li></ul></li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.csdn.net/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>超链接外部网站<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>br</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index6.html<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>超链接内部网站<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><ul><li>属性<code>target</code> 指定超链接打开的位置<ul><li>可选值_self 默认值，在当前页面中打开链接</li><li>可选值_blank 在一个新的页面中打开超链接</li></ul></li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>index5.html<span class="token punctuation">"</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>_blank<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>超链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><hr><blockquote><p>以下是实现跳转到当前页面的其他位置功能</p></blockquote><ul><li>属性<code>herf</code><ul><li>值为#时，表示回到页面顶部<ul><li>在开发中，如果不确定要跳到那个网站，可以先用将herf的属性设为#，当作占位符</li></ul></li><li>值为#加上id时，表示跳转到标签id为该id的位置</li><li>值为javascript:;时，此时点击这个超链接什么也不会发生</li></ul></li></ul><p><strong>当我们想要去到页面中的任意一个位置时，我们需要为目的位置的标签做标记（利用id属性坐标记）</strong></p><ul><li>属性<code>id</code>（唯一不重复的）<ul><li>区分大小写，不以数字开头</li></ul></li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#bottom<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>去到底部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bottom<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>回到顶部<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span></code></pre><hr><p>*补充<em><strong>相对路径</strong></em>：</p><ul><li>.&#x2F; 表示当前文件所在目录</li><li>..&#x2F; 表示当前文件所在目录的上一级目录</li></ul><h3 id="1-8-图片标签"><a href="#1-8-图片标签" class="headerlink" title="1.8 图片标签"></a>1.8 图片标签</h3><p>图片标签用于向当前页面引入一个外部图片</p><p><strong>用<code>img</code>标签引入外部照片，img标签时一个自结束标签</strong></p><hr><ul><li>属性<code>src</code>  指定的是图片（内部或外部）路径</li><li>属性<code>alt</code> 对图片的描述，默认情况下不会显示，图片没加载出来时显示，<strong>搜索引擎会根据alt的内容来识别图片</strong></li><li>属性<code>width</code>  图片宽度（单位是像素）</li><li>属性<code>height</code>  图片高度<ul><li>如果宽度和高度只修改了一个，则另一个会等比例改变</li></ul></li></ul><p><em>一般在pc端，不建议修改图片大小；移动端经常需要对图片进行缩放</em></p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- 引入内部图片 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./img/前端例子1.png<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>前端<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>280<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 引入外部图片 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://img1.baidu.com/it/u<span class="token punctuation">=</span>299707723,491113869&amp;fm<span class="token punctuation">=</span>253&amp;fmt<span class="token punctuation">=</span>auto&amp;app<span class="token punctuation">=</span>138&amp;f<span class="token punctuation">=</span>JPEG?w<span class="token punctuation">=</span>500&amp;h<span class="token punctuation">=</span>500<span class="token punctuation">"</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>钢铁侠<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><p><code>img</code>属于替换元素，介于行内元素和块元素之间，具有两种元素的特点</p><hr><p>图片格式：</p><ul><li>jpeg(jpg)<ul><li>支持的颜色比较丰富，不支持透明效果，不支持动图</li><li>一般用来显示照片</li></ul></li><li>gif<ul><li>支持的颜色比较少，支持简单透明，支持动图</li><li>显示颜色单一的图片、动图</li></ul></li><li>png<ul><li>支持的的颜色丰富，支持复杂透明，不支持动图</li><li>专为网页而生</li></ul></li><li>webp<ul><li>具备其他格式所有优点，并且文件还特别小（缺点：兼容性差）</li><li>谷歌推出的专门用于网页中的图片的一种格式</li></ul></li><li>base64<ul><li>将图片使用base64进行编码，这样可以直接将图片转换为字符形式来引入图片</li><li>用的场景不多，一般都是一些需要和网页一起加载的图片才会使用</li></ul></li></ul><p><em>效果一样，用小的，效果不一样，用效果好的</em></p><h3 id="1-9-内联框架（全是替换元素）"><a href="#1-9-内联框架（全是替换元素）" class="headerlink" title="1.9 内联框架（全是替换元素）"></a>1.9 内联框架（全是替换元素）</h3><p>用于向当前页面中引入一个其他页面</p><p>用<code>iframe</code>标签创建</p><ul><li><p>属性<code>src</code>  指定要引入的网页的链接</p></li><li><p>属性<code>frameborder</code>  指定内联框架的边框</p></li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>iframe</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>https://www.csdn.net/<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>800<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span> <span class="token attr-name">frameborder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>0<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>iframe</span><span class="token punctuation">></span></span></code></pre><h3 id="1-10-音视频播放"><a href="#1-10-音视频播放" class="headerlink" title="1.10 音视频播放"></a>1.10 音视频播放</h3><p>用<code>audio</code>用来向页面引入一个外部的音频文件的替换元素</p><p>音视频文件引入时，默认情况下不允许用户自己控制播放停止</p><ul><li>属性<code>src</code>  文件路径</li><li>属性<code>controls</code>  是否允许用户控制播放（<strong>是不用给值的</strong>）</li><li>属性<code>autoplay</code>  音频文件是否自动播放（<strong>是不用给值的</strong>），但是大部分浏览器不会自动播放音乐</li><li>属性<code>loop</code>  是否循环播放（<strong>是不用给值的</strong>）</li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./source/left-right.mp3<span class="token punctuation">"</span></span> <span class="token attr-name">controls</span> <span class="token attr-name">autopaly</span> <span class="token attr-name">loop</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span></code></pre><p>除了用<code>src</code>来指定外部文件路径，还可以通过<code>source</code>来指定文件（同时可以指定多个文件）</p><p>当浏览器不能播放时，会显示“对不起，您的浏览器不支持播放”；若可以播放，则不显示</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">controls</span><span class="token punctuation">></span></span>    对不起，您的浏览器不支持播放    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>source\keyL.mp3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>source\keyL.ogg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span></code></pre><p>为兼容老版本，还可以选择用<code>embed</code>标签</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>audio</span> <span class="token attr-name">controls</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>source\keyL.mp3<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>source\keyL.ogg<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>embed</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>source\keyL.mp3<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>audio/mp3<span class="token punctuation">"</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>300<span class="token punctuation">"</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>500<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>audio</span><span class="token punctuation">></span></span></code></pre><hr><p>用<code>video</code>用来向页面引入一个外部的视频文件的替换元素</p><p>使用方式与<code>audio</code>基本一样</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>video</span> <span class="token attr-name">controls</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./source/v1.mp4<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>embed</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./source/v1.mp4<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>audio/mp4<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>video</span><span class="token punctuation">></span></span></code></pre><h2 id="2-CSS"><a href="#2-CSS" class="headerlink" title="2. CSS"></a>2. CSS</h2><p>层叠样式表，网页实际上是一个多层的结构，通过CSS可以分别为网页的每一个层来设置样式，而我们最终看到的只是网页的最上边一层，总之，<strong>CSS用来设置网页中元素的样式</strong></p><h3 id="2-1-编写位置"><a href="#2-1-编写位置" class="headerlink" title="2.1 编写位置"></a>2.1 编写位置</h3><ul><li>第一种方式（<strong>内联样式、行内样式</strong>）：在标签内部通过stlye属性来设置元素样式<ul><li>只能对一个标签生效，若想影响到每一个元素，则必须复制（不推荐）</li><li>不方便维护，<strong>开发时不要使用内联样式！！</strong></li></ul></li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>今天天气真好呀<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><hr><ul><li>第二种方式（<strong>内部样式表</strong>）：将样式编写到head中的style标签里<ul><li>通过css的选择器来选中元素并为其设置各种样式</li><li>可以同时为多个标签设置样式，修改方便，内部样式方便对样式进行重复使用</li><li>它里面的样式不能跨页面进行复用</li></ul></li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>css1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token comment" spellcheck="true">/* css的选择器 */</span>        p&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span></code></pre><hr><ul><li>第三种方式（<strong>外部样式表</strong>）：将css样式编写到一个外部的css文件中，然后通过<code>link</code>标签引入外部的css文件<ul><li>样式可以在不同页面间复用</li><li><strong>开发时最佳使用方式</strong></li><li>可以使用浏览器的缓存机制，从而加快网页加载速度，提高用户体验</li></ul></li></ul><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--在外部的css文件style.css中--></span>p<span class="token entity" title="&#123;">&amp;#123;</span>    color:green;    font-size:20px;<span class="token entity" title="&#125;">&amp;#125;</span><span class="token comment" spellcheck="true">&lt;!--在html文件中--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>./style.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span></code></pre><h3 id="2-2-css基本语法"><a href="#2-2-css基本语法" class="headerlink" title="2.2 css基本语法"></a>2.2 css基本语法</h3><p>css虽然写在html中，但与html遵循的是完全不一样的语法，html的语法不可再css内运用同理，css语法不可在html内运用</p><p><strong>注释</strong></p><p>区分html注释与css注释</p><pre class=" language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!--这是html的注释--></span></code></pre><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*这是css的注释*/</span></code></pre><p>css基本语法：选择器 声明块</p><ul><li>选择器：通过选择器可选中页面的指定元素<ul><li>比如p，就是选中页面中所有p元素</li></ul></li><li>声明块：通过声明块来指定要为元素设定的样式<ul><li>声明块由一个一个声明组成</li><li>声明是一个名值对结构（一个样式名对应一个样式值，以<strong>冒号</strong>连接，<strong>分号</strong>结尾）</li></ul></li></ul><h3 id="2-3-常用选择器"><a href="#2-3-常用选择器" class="headerlink" title="2.3 常用选择器"></a>2.3 常用选择器</h3><p>元素选择器、id选择器、类选择器、通配选择器</p><h4 id="2-3-1-元素选择器"><a href="#2-3-1-元素选择器" class="headerlink" title="2.3.1 元素选择器"></a>2.3.1 元素选择器</h4><ul><li>根据标签名选中指定元素</li><li>语法：标签名{}   eg：p{}   h1{}</li></ul><pre class=" language-css"><code class="language-css">&lt;head>    &lt;meta charset=<span class="token string">"UTF-8"</span>>    &lt;title>Document&lt;/title>    &lt;style>        <span class="token comment" spellcheck="true">/* 将所有段落变成红色 */</span>        <span class="token comment" spellcheck="true">/* 元素选择器 */</span>        p&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    &lt;/style>&lt;/head>&lt;body>    &lt;h<span class="token number">1</span>>        第三节 常用选择器    &lt;/h<span class="token number">1</span>>    &lt;h<span class="token number">2</span>>        我是标题    &lt;/h<span class="token number">2</span>>    &lt;p>写几个段落<span class="token number">1</span>&lt;/p>    &lt;p id=<span class="token string">"red"</span>>写几个段落<span class="token number">2</span>&lt;/p>    &lt;p>写几个段落<span class="token number">3</span>&lt;/p>    &lt;p>写几个段落<span class="token number">4</span>&lt;/p>    &lt;p>写几个段落<span class="token number">5</span>&lt;/p>&lt;/body></code></pre><h4 id="2-3-2-id选择器"><a href="#2-3-2-id选择器" class="headerlink" title="2.3.2 id选择器"></a>2.3.2 id选择器</h4><ul><li>根据元素的id属性值选择一个元素</li><li>语法：#id属性值{}    eg：#box{}    #red{}</li></ul><pre class=" language-css"><code class="language-css">&lt;head>    &lt;meta charset=<span class="token string">"UTF-8"</span>>    &lt;title>Document&lt;/title>    &lt;style>        <span class="token comment" spellcheck="true">/* 如果只想设置段落2为红色 */</span>        <span class="token comment" spellcheck="true">/* id选择器 */</span>        #red&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    &lt;/style>&lt;/head>&lt;body>    &lt;h<span class="token number">1</span>>        第三节 常用选择器    &lt;/h<span class="token number">1</span>>    &lt;h<span class="token number">2</span>>        我是标题    &lt;/h<span class="token number">2</span>>    &lt;p>写几个段落<span class="token number">1</span>&lt;/p>    &lt;p id=<span class="token string">"red"</span>>写几个段落<span class="token number">2</span>&lt;/p>    &lt;p>写几个段落<span class="token number">3</span>&lt;/p>    &lt;p>写几个段落<span class="token number">4</span>&lt;/p>    &lt;p>写几个段落<span class="token number">5</span>&lt;/p>&lt;/body></code></pre><p>class是一个标签的属性，它和id类似，不同的是class可以重复使用，可以通过class属性为元素分组，也可以同时为一个元素指定多个class属性，多个class之间使用<strong>空格</strong>隔开</p><h4 id="2-3-3-类-class-选择器"><a href="#2-3-3-类-class-选择器" class="headerlink" title="2.3.3 类(class)选择器"></a>2.3.3 类(class)选择器</h4><ul><li>根据元素的class属性值选中一组元素</li><li>语法：.class属性值{}</li></ul><pre class=" language-css"><code class="language-css">&lt;head>    &lt;meta charset=<span class="token string">"UTF-8"</span>>    &lt;style>        <span class="token comment" spellcheck="true">/* 将段落3和4设置为蓝色 */</span>        <span class="token comment" spellcheck="true">/* 用class属性 */</span>        <span class="token number">.</span>blue&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>        <span class="token number">.</span>abc&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">font-size</span><span class="token punctuation">:</span> <span class="token number">20</span>px<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    &lt;/style>&lt;/head>&lt;body>    &lt;h<span class="token number">1</span> class=<span class="token string">"blue abc"</span>>        第三节 常用选择器    &lt;/h<span class="token number">1</span>>    &lt;p class=<span class="token string">"blue abc"</span>>写几个段落<span class="token number">3</span>&lt;/p>    &lt;p class=<span class="token string">"blue"</span>>写几个段落<span class="token number">4</span>&lt;/p>&lt;/body></code></pre><h4 id="2-3-4-通配选择器"><a href="#2-3-4-通配选择器" class="headerlink" title="2.3.4 通配选择器"></a>2.3.4 通配选择器</h4><ul><li>选中页面中的所有元素</li><li>语法：*{}</li></ul><pre class=" language-css"><code class="language-css">*&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h3 id="2-4-复合选择器"><a href="#2-4-复合选择器" class="headerlink" title="2.4 复合选择器"></a>2.4 复合选择器</h3><h4 id="2-4-1-交集选择器"><a href="#2-4-1-交集选择器" class="headerlink" title="2.4.1 交集选择器"></a>2.4.1 交集选择器</h4><ul><li><p>选中同时复合多个条件的的元素</p></li><li><p>语法：选择器1选择器2选择器3选择器n{}</p></li><li><p>交集选择器中如果有元素选择器，必须以元素选择器开头</p></li></ul><pre class=" language-css"><code class="language-css">    &lt;!-- 将class为red的div设置成红色 -->    &lt;style>        div<span class="token number">.</span>red&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    &lt;/style>&lt;/head>&lt;body>        &lt;div class=<span class="token string">"red"</span>>我是div&lt;/div>    &lt;p class=<span class="token string">"red"</span>>我是p&lt;/p>&lt;/body></code></pre><h4 id="2-4-2-并集选择器（选择器分组）"><a href="#2-4-2-并集选择器（选择器分组）" class="headerlink" title="2.4.2 并集选择器（选择器分组）"></a>2.4.2 并集选择器（选择器分组）</h4><ul><li>同时选择多个选择器对应的元素</li><li>语法：选择器1,选择器2,选择器3,选择器n{}</li></ul><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">    <span class="token comment" spellcheck="true">/* 将h1和span同时变成绿色 */</span>    h<span class="token number">1</span>,span&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code></pre><h3 id="2-5-关系选择器"><a href="#2-5-关系选择器" class="headerlink" title="2.5 关系选择器"></a>2.5 关系选择器</h3><blockquote><p>父元素</p></blockquote><ul><li>直接包含子元素的元素</li></ul><blockquote><p>子元素</p></blockquote><ul><li>直接被父元素包含的元素</li></ul><blockquote><p>祖先元素</p></blockquote><ul><li><p>直接或间接包含后代元素的元素</p></li><li><p>一个元素的父元素也是祖先元素</p></li></ul><blockquote><p>后代元素</p></blockquote><ul><li><p>直接或间接被祖先元素包含的元素</p></li><li><p>子元素也是后代元素</p></li></ul><blockquote><p>兄弟元素</p></blockquote><ul><li>拥有相同父元素的元素</li></ul><h4 id="2-5-1-子元素选择器"><a href="#2-5-1-子元素选择器" class="headerlink" title="2.5.1 子元素选择器"></a>2.5.1 子元素选择器</h4><ul><li>选中指定父元素的指定子元素（对孙子无用）</li><li>语法：父元素&gt;子元素</li></ul><p>body内：</p><pre class=" language-css"><code class="language-css">&lt;div>    我是一个div    &lt;p>        我是div中的p元素        &lt;span>我是p中的span元素&lt;/span>    &lt;/p>    &lt;!-- div子元素span -->    &lt;span>我是div中的span元素&lt;/span>&lt;/div></code></pre><p>head内：</p><pre class=" language-css"><code class="language-css">&lt;style>    <span class="token comment" spellcheck="true">/* 为div的子元素span设置为红色 */</span>    div>span&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>&lt;/style></code></pre><h4 id="2-5-2-后代元素选择器"><a href="#2-5-2-后代元素选择器" class="headerlink" title="2.5.2 后代元素选择器"></a>2.5.2 后代元素选择器</h4><ul><li>选中指定元素内的指定后代元素（对孙子有用）</li><li>语法：祖先 后代</li></ul><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 后代元素选择器 */</span><span class="token comment" spellcheck="true">/* 将div中的所有span元素都设置为蓝色 */</span>div span&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h4 id="2-5-3-兄弟元素选择器"><a href="#2-5-3-兄弟元素选择器" class="headerlink" title="2.5.3 兄弟元素选择器"></a>2.5.3 兄弟元素选择器</h4><ul><li>选择下一个兄弟</li><li>语法：前一个 + 下一个（选择下边一个兄弟元素）<ul><li>语法2：前一个 ~ 下一个（选择下边所有的兄弟）</li></ul></li></ul><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/* 兄弟元素选择器 */</span>p+span&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><h3 id="2-6-属性选择器"><a href="#2-6-属性选择器" class="headerlink" title="2.6 属性选择器"></a>2.6 属性选择器</h3><ul><li>语法1：[属性名]（选择含有指定属性的元素）</li><li>语法2：[属性名&#x3D;属性值] （选择含有指定属性和属性值的元素）</li><li>语法3：[属性名^&#x3D;属性值] （选择属性值以指定元素<strong>开头</strong>的元素）</li><li>语法4：[属性名$&#x3D;属性值] （选择属性值以指定元素<strong>结尾</strong>的元素）</li><li>语法5：[属性名*&#x3D;属性值] （选择属性值中含有某值的元素）</li></ul><p>body内：</p><pre class=" language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>abc<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这是段落1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hello<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这是段落2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>abcdef<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>这是段落3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是段落4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是段落5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是段落6<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是段落7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span></code></pre><p>head内：</p><pre class=" language-css"><code class="language-css">&lt;style>    <span class="token comment" spellcheck="true">/*段落1和3会标红*/</span>    p[title^=abc]&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>       <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>   &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/*段落2，3会标红*/</span>    p[title*=e]&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>        <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>    &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>&lt;/style></code></pre><h3 id="2-7-伪类选择器"><a href="#2-7-伪类选择器" class="headerlink" title="2.7 伪类选择器"></a>2.7 伪类选择器</h3><p>用来描述一个元素的特殊状态，比如，第一个元素，被点击的元素，鼠标移入的元素……</p><p>伪类一般情况下使用<code>:</code>开头</p><ul><li><p>:first-child 第一个子元素</p></li><li><p>:last-child 最后一个子元素</p></li><li><p>:nth-child() 选中第n个子元素</p><ul><li>如果括号内填n，表示全部，从0到正无穷</li><li>如果括号内填2n或even，表示选中偶数位的元素</li><li>如果括号内填2n+1或odd，表示选中奇数位的元素</li></ul></li></ul><p><strong>以上这些伪类是根据所有子元素进行排序的</strong></p><ul><li>:first-of-type</li><li>:last-of-type</li><li>:nthof-type()</li></ul><p><strong>以上三个伪类是根据同类型子元素进行排序的</strong></p><ul><li>:not() 将符合条件的元素从选择器中去除</li></ul><pre class=" language-css"><code class="language-css"><span class="token comment" spellcheck="true">/*将除了第三个都变成黄绿色*/</span>ul><span class="token property">li</span><span class="token punctuation">:</span><span class="token function">not</span><span class="token punctuation">(</span><span class="token punctuation">:</span><span class="token function">nth-child</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span>yellowgreen<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><pre class=" language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Document<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token comment" spellcheck="true">/* 利用伪类选择器，来给无序表的第一个设置红色 */</span>        ul><span class="token property">li</span><span class="token punctuation">:</span>first-child&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>            <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>        &amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 创建一个无序表 可以用ul>li*5 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web </tag>
            
            <tag> CSS </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/10/20/hello-world/"/>
      <url>/2023/10/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
